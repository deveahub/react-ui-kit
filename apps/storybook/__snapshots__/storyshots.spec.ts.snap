// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Storyshots Components/Button Full Width 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body
    class="sb-show-nopreview"
  >
    <div>
      <div
        style="display: flex; gap: 8px; flex-direction: column;"
      >
        <button
          class="c-gCjpHZ c-gCjpHZ-kPDsqb-variant-primary c-gCjpHZ-fGHEql-fullWidth-true c-gCjpHZ-kfXiog-rounded-true c-gCjpHZ-fJQHxA-disabled-false"
        >
          Button
        </button>
        <button
          class="c-gCjpHZ c-gCjpHZ-kPDsqb-variant-primary c-gCjpHZ-fGHEql-fullWidth-true c-gCjpHZ-kfXiog-rounded-true c-gCjpHZ-fJQHxA-disabled-false"
        >
          Button 2
        </button>
      </div>
    </div>
  </body>,
  "container": <div>
    <div
      style="display: flex; gap: 8px; flex-direction: column;"
    >
      <button
        class="c-gCjpHZ c-gCjpHZ-kPDsqb-variant-primary c-gCjpHZ-fGHEql-fullWidth-true c-gCjpHZ-kfXiog-rounded-true c-gCjpHZ-fJQHxA-disabled-false"
      >
        Button
      </button>
      <button
        class="c-gCjpHZ c-gCjpHZ-kPDsqb-variant-primary c-gCjpHZ-fGHEql-fullWidth-true c-gCjpHZ-kfXiog-rounded-true c-gCjpHZ-fJQHxA-disabled-false"
      >
        Button 2
      </button>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`Storyshots Components/Button Main 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body
    class="sb-show-nopreview"
  >
    <div>
      <button
        class="c-gCjpHZ c-gCjpHZ-kPDsqb-variant-primary c-gCjpHZ-kfXiog-rounded-true c-gCjpHZ-fJQHxA-disabled-false"
      >
        Button
      </button>
    </div>
  </body>,
  "container": <div>
    <button
      class="c-gCjpHZ c-gCjpHZ-kPDsqb-variant-primary c-gCjpHZ-kfXiog-rounded-true c-gCjpHZ-fJQHxA-disabled-false"
    >
      Button
    </button>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`Storyshots Components/Button Variants 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body
    class="sb-show-nopreview"
  >
    <div>
      <div
        style="display: flex; gap: 8px;"
      >
        <button
          class="c-gCjpHZ c-gCjpHZ-kPDsqb-variant-primary c-gCjpHZ-kfXiog-rounded-true c-gCjpHZ-fJQHxA-disabled-false"
        >
          Primary
        </button>
        <button
          class="c-gCjpHZ c-gCjpHZ-dRHDpW-variant-foreground c-gCjpHZ-kfXiog-rounded-true c-gCjpHZ-fJQHxA-disabled-false"
        >
          Foreground
        </button>
        <button
          class="c-gCjpHZ c-gCjpHZ-jvROsK-variant-green c-gCjpHZ-kfXiog-rounded-true c-gCjpHZ-fJQHxA-disabled-false"
        >
          Green
        </button>
        <button
          class="c-gCjpHZ c-gCjpHZ-dwLFOC-variant-orange c-gCjpHZ-kfXiog-rounded-true c-gCjpHZ-fJQHxA-disabled-false"
        >
          Orange
        </button>
        <button
          class="c-gCjpHZ c-gCjpHZ-hsXnvy-variant-yellow c-gCjpHZ-kfXiog-rounded-true c-gCjpHZ-fJQHxA-disabled-false"
        >
          Yellow
        </button>
      </div>
    </div>
  </body>,
  "container": <div>
    <div
      style="display: flex; gap: 8px;"
    >
      <button
        class="c-gCjpHZ c-gCjpHZ-kPDsqb-variant-primary c-gCjpHZ-kfXiog-rounded-true c-gCjpHZ-fJQHxA-disabled-false"
      >
        Primary
      </button>
      <button
        class="c-gCjpHZ c-gCjpHZ-dRHDpW-variant-foreground c-gCjpHZ-kfXiog-rounded-true c-gCjpHZ-fJQHxA-disabled-false"
      >
        Foreground
      </button>
      <button
        class="c-gCjpHZ c-gCjpHZ-jvROsK-variant-green c-gCjpHZ-kfXiog-rounded-true c-gCjpHZ-fJQHxA-disabled-false"
      >
        Green
      </button>
      <button
        class="c-gCjpHZ c-gCjpHZ-dwLFOC-variant-orange c-gCjpHZ-kfXiog-rounded-true c-gCjpHZ-fJQHxA-disabled-false"
      >
        Orange
      </button>
      <button
        class="c-gCjpHZ c-gCjpHZ-hsXnvy-variant-yellow c-gCjpHZ-kfXiog-rounded-true c-gCjpHZ-fJQHxA-disabled-false"
      >
        Yellow
      </button>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`Storyshots Components/Checkbox Main 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body
    class="sb-show-nopreview"
  >
    <div>
      <input
        class="c-kavqrr c-kavqrr-eFKUPz-size-sm"
        type="checkbox"
      />
    </div>
  </body>,
  "container": <div>
    <input
      class="c-kavqrr c-kavqrr-eFKUPz-size-sm"
      type="checkbox"
    />
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`Storyshots Components/Checkbox Sizes 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body
    class="sb-show-nopreview"
  >
    <div>
      <div
        class="c-dhzjXW c-dhzjXW-jroWjL-alignItems-center c-dhzjXW-imMwcw-spacing-1"
      >
        <p
          class="c-cyFBRX c-cyFBRX-qrXLX-as-p c-cyFBRX-dYJjti-weight-regular c-cyFBRX-icyFBRX-css"
        >
          sm
        </p>
        <input
          class="c-kavqrr c-kavqrr-eFKUPz-size-sm"
          type="checkbox"
        />
      </div>
      <div
        class="c-dhzjXW c-dhzjXW-jroWjL-alignItems-center c-dhzjXW-imMwcw-spacing-1"
      >
        <p
          class="c-cyFBRX c-cyFBRX-qrXLX-as-p c-cyFBRX-dYJjti-weight-regular c-cyFBRX-icyFBRX-css"
        >
          md
        </p>
        <input
          class="c-kavqrr c-kavqrr-kqiFyi-size-md"
          type="checkbox"
        />
      </div>
      <div
        class="c-dhzjXW c-dhzjXW-jroWjL-alignItems-center c-dhzjXW-imMwcw-spacing-1"
      >
        <p
          class="c-cyFBRX c-cyFBRX-qrXLX-as-p c-cyFBRX-dYJjti-weight-regular c-cyFBRX-icyFBRX-css"
        >
          lg
        </p>
        <input
          class="c-kavqrr c-kavqrr-izxAXi-size-lg"
          type="checkbox"
        />
      </div>
    </div>
  </body>,
  "container": <div>
    <div
      class="c-dhzjXW c-dhzjXW-jroWjL-alignItems-center c-dhzjXW-imMwcw-spacing-1"
    >
      <p
        class="c-cyFBRX c-cyFBRX-qrXLX-as-p c-cyFBRX-dYJjti-weight-regular c-cyFBRX-icyFBRX-css"
      >
        sm
      </p>
      <input
        class="c-kavqrr c-kavqrr-eFKUPz-size-sm"
        type="checkbox"
      />
    </div>
    <div
      class="c-dhzjXW c-dhzjXW-jroWjL-alignItems-center c-dhzjXW-imMwcw-spacing-1"
    >
      <p
        class="c-cyFBRX c-cyFBRX-qrXLX-as-p c-cyFBRX-dYJjti-weight-regular c-cyFBRX-icyFBRX-css"
      >
        md
      </p>
      <input
        class="c-kavqrr c-kavqrr-kqiFyi-size-md"
        type="checkbox"
      />
    </div>
    <div
      class="c-dhzjXW c-dhzjXW-jroWjL-alignItems-center c-dhzjXW-imMwcw-spacing-1"
    >
      <p
        class="c-cyFBRX c-cyFBRX-qrXLX-as-p c-cyFBRX-dYJjti-weight-regular c-cyFBRX-icyFBRX-css"
      >
        lg
      </p>
      <input
        class="c-kavqrr c-kavqrr-izxAXi-size-lg"
        type="checkbox"
      />
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`Storyshots Components/FieldSet Main 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body
    class="sb-show-nopreview"
  >
    <div>
      <fieldset
        class="c-obFYN c-dhzjXW c-dhzjXW-fbjddq-spacing-3 c-dhzjXW-iTKOFX-direction-column"
      >
        <div>
          1
        </div>
        <div>
          2
        </div>
        <div>
          3
        </div>
      </fieldset>
    </div>
  </body>,
  "container": <div>
    <fieldset
      class="c-obFYN c-dhzjXW c-dhzjXW-fbjddq-spacing-3 c-dhzjXW-iTKOFX-direction-column"
    >
      <div>
        1
      </div>
      <div>
        2
      </div>
      <div>
        3
      </div>
    </fieldset>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`Storyshots Components/FormControl Form Checkbox 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body
    class="sb-show-nopreview"
  >
    <div>
      <div
        class="c-dhzjXW c-dhzjXW-kiHjTX-spacing-015 c-dhzjXW-iTKOFX-direction-column"
      >
        <div
          class="c-dhzjXW c-dhzjXW-jroWjL-alignItems-center c-dhzjXW-kiHjTX-spacing-015 c-dhzjXW-ejCoEP-direction-row"
        >
          <input
            class="c-kavqrr c-kavqrr-eFKUPz-size-sm"
            id=":r0:"
            type="checkbox"
          />
          <label
            class="c-cyFBRX c-cyFBRX-qrXLX-as-label c-cyFBRX-dYJjti-weight-regular c-cyFBRX-icyFBRX-css"
            for=":r0:"
          >
            Input label
          </label>
        </div>
        <span
          class="c-cyFBRX c-cyFBRX-qrXLX-as-span c-cyFBRX-iEkYDt-size--1 c-cyFBRX-dYJjti-weight-regular c-cyFBRX-ihSObmv-css"
        >
          Help for user
        </span>
      </div>
    </div>
  </body>,
  "container": <div>
    <div
      class="c-dhzjXW c-dhzjXW-kiHjTX-spacing-015 c-dhzjXW-iTKOFX-direction-column"
    >
      <div
        class="c-dhzjXW c-dhzjXW-jroWjL-alignItems-center c-dhzjXW-kiHjTX-spacing-015 c-dhzjXW-ejCoEP-direction-row"
      >
        <input
          class="c-kavqrr c-kavqrr-eFKUPz-size-sm"
          id=":r0:"
          type="checkbox"
        />
        <label
          class="c-cyFBRX c-cyFBRX-qrXLX-as-label c-cyFBRX-dYJjti-weight-regular c-cyFBRX-icyFBRX-css"
          for=":r0:"
        >
          Input label
        </label>
      </div>
      <span
        class="c-cyFBRX c-cyFBRX-qrXLX-as-span c-cyFBRX-iEkYDt-size--1 c-cyFBRX-dYJjti-weight-regular c-cyFBRX-ihSObmv-css"
      >
        Help for user
      </span>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`Storyshots Components/FormControl Form Input 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body
    class="sb-show-nopreview"
  >
    <div>
      <div
        class="c-dhzjXW c-dhzjXW-ioTNZo-css"
      >
        <div
          class="c-dhzjXW c-dhzjXW-kiHjTX-spacing-015 c-dhzjXW-iTKOFX-direction-column"
        >
          <div
            class="c-dhzjXW c-dhzjXW-kiHjTX-spacing-015 c-dhzjXW-iTKOFX-direction-column"
          >
            <label
              class="c-cyFBRX c-cyFBRX-qrXLX-as-label c-cyFBRX-dYJjti-weight-regular c-cyFBRX-icyFBRX-css"
              for=":r1:"
            >
              Input label
            </label>
            <input
              class="c-bpAsxd c-bpAsxd-kDHgga-variant-default"
              id=":r1:"
            />
          </div>
          <span
            class="c-cyFBRX c-cyFBRX-qrXLX-as-span c-cyFBRX-iEkYDt-size--1 c-cyFBRX-dYJjti-weight-regular c-cyFBRX-ihSObmv-css"
          >
            Help for user
          </span>
        </div>
      </div>
    </div>
  </body>,
  "container": <div>
    <div
      class="c-dhzjXW c-dhzjXW-ioTNZo-css"
    >
      <div
        class="c-dhzjXW c-dhzjXW-kiHjTX-spacing-015 c-dhzjXW-iTKOFX-direction-column"
      >
        <div
          class="c-dhzjXW c-dhzjXW-kiHjTX-spacing-015 c-dhzjXW-iTKOFX-direction-column"
        >
          <label
            class="c-cyFBRX c-cyFBRX-qrXLX-as-label c-cyFBRX-dYJjti-weight-regular c-cyFBRX-icyFBRX-css"
            for=":r1:"
          >
            Input label
          </label>
          <input
            class="c-bpAsxd c-bpAsxd-kDHgga-variant-default"
            id=":r1:"
          />
        </div>
        <span
          class="c-cyFBRX c-cyFBRX-qrXLX-as-span c-cyFBRX-iEkYDt-size--1 c-cyFBRX-dYJjti-weight-regular c-cyFBRX-ihSObmv-css"
        >
          Help for user
        </span>
      </div>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`Storyshots Components/FormControl Form Radio 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body
    class="sb-show-nopreview"
  >
    <div>
      <div
        class="c-dhzjXW c-dhzjXW-cBQSbj-spacing-2 c-dhzjXW-iTKOFX-direction-column"
      >
        <div
          class="c-dhzjXW c-dhzjXW-cBQSbj-spacing-2 c-dhzjXW-iTKOFX-direction-column"
        >
          <label
            class="c-cyFBRX c-cyFBRX-qrXLX-as-label c-cyFBRX-dYJjti-weight-regular c-cyFBRX-icyFBRX-css"
          >
            Input label
          </label>
          <div
            class="c-dhzjXW c-dhzjXW-cBQSbj-spacing-2 c-dhzjXW-iTKOFX-direction-column"
          >
            <div
              class="c-dhzjXW c-dhzjXW-jroWjL-alignItems-center c-dhzjXW-imMwcw-spacing-1"
            >
              <input
                class="c-ezUtqA"
                for=":r2:"
                name="element"
                type="radio"
                value="element-1"
              />
              <label
                class="c-cyFBRX c-cyFBRX-qrXLX-as-label c-cyFBRX-dYJjti-weight-regular c-cyFBRX-icyFBRX-css"
                id=":r2:"
              >
                Element 1
              </label>
            </div>
            <div
              class="c-dhzjXW c-dhzjXW-jroWjL-alignItems-center c-dhzjXW-imMwcw-spacing-1"
            >
              <input
                class="c-ezUtqA"
                for=":r3:"
                name="element"
                type="radio"
                value="element-2"
              />
              <label
                class="c-cyFBRX c-cyFBRX-qrXLX-as-label c-cyFBRX-dYJjti-weight-regular c-cyFBRX-icyFBRX-css"
                id=":r3:"
              >
                Element 2
              </label>
            </div>
            <div
              class="c-dhzjXW c-dhzjXW-jroWjL-alignItems-center c-dhzjXW-imMwcw-spacing-1"
            >
              <input
                class="c-ezUtqA"
                for=":r4:"
                name="element"
                type="radio"
                value="element-3"
              />
              <label
                class="c-cyFBRX c-cyFBRX-qrXLX-as-label c-cyFBRX-dYJjti-weight-regular c-cyFBRX-icyFBRX-css"
                id=":r4:"
              >
                Element 3
              </label>
            </div>
          </div>
        </div>
        <span
          class="c-cyFBRX c-cyFBRX-qrXLX-as-span c-cyFBRX-iEkYDt-size--1 c-cyFBRX-dYJjti-weight-regular c-cyFBRX-ihSObmv-css"
        >
          Help for user
        </span>
      </div>
    </div>
  </body>,
  "container": <div>
    <div
      class="c-dhzjXW c-dhzjXW-cBQSbj-spacing-2 c-dhzjXW-iTKOFX-direction-column"
    >
      <div
        class="c-dhzjXW c-dhzjXW-cBQSbj-spacing-2 c-dhzjXW-iTKOFX-direction-column"
      >
        <label
          class="c-cyFBRX c-cyFBRX-qrXLX-as-label c-cyFBRX-dYJjti-weight-regular c-cyFBRX-icyFBRX-css"
        >
          Input label
        </label>
        <div
          class="c-dhzjXW c-dhzjXW-cBQSbj-spacing-2 c-dhzjXW-iTKOFX-direction-column"
        >
          <div
            class="c-dhzjXW c-dhzjXW-jroWjL-alignItems-center c-dhzjXW-imMwcw-spacing-1"
          >
            <input
              class="c-ezUtqA"
              for=":r2:"
              name="element"
              type="radio"
              value="element-1"
            />
            <label
              class="c-cyFBRX c-cyFBRX-qrXLX-as-label c-cyFBRX-dYJjti-weight-regular c-cyFBRX-icyFBRX-css"
              id=":r2:"
            >
              Element 1
            </label>
          </div>
          <div
            class="c-dhzjXW c-dhzjXW-jroWjL-alignItems-center c-dhzjXW-imMwcw-spacing-1"
          >
            <input
              class="c-ezUtqA"
              for=":r3:"
              name="element"
              type="radio"
              value="element-2"
            />
            <label
              class="c-cyFBRX c-cyFBRX-qrXLX-as-label c-cyFBRX-dYJjti-weight-regular c-cyFBRX-icyFBRX-css"
              id=":r3:"
            >
              Element 2
            </label>
          </div>
          <div
            class="c-dhzjXW c-dhzjXW-jroWjL-alignItems-center c-dhzjXW-imMwcw-spacing-1"
          >
            <input
              class="c-ezUtqA"
              for=":r4:"
              name="element"
              type="radio"
              value="element-3"
            />
            <label
              class="c-cyFBRX c-cyFBRX-qrXLX-as-label c-cyFBRX-dYJjti-weight-regular c-cyFBRX-icyFBRX-css"
              id=":r4:"
            >
              Element 3
            </label>
          </div>
        </div>
      </div>
      <span
        class="c-cyFBRX c-cyFBRX-qrXLX-as-span c-cyFBRX-iEkYDt-size--1 c-cyFBRX-dYJjti-weight-regular c-cyFBRX-ihSObmv-css"
      >
        Help for user
      </span>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`Storyshots Components/FormControl Form Select 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body
    class="sb-show-nopreview"
  >
    <div>
      <div
        class="c-dhzjXW c-dhzjXW-kiHjTX-spacing-015 c-dhzjXW-iTKOFX-direction-column"
      >
        <div
          class="c-dhzjXW c-dhzjXW-kiHjTX-spacing-015 c-dhzjXW-iTKOFX-direction-column"
        >
          <label
            class="c-cyFBRX c-cyFBRX-qrXLX-as-label c-cyFBRX-dYJjti-weight-regular c-cyFBRX-icyFBRX-css"
            for=":r5:"
          >
            Input label
          </label>
          <select
            class="c-ciXJzL"
            id=":r5:"
          >
            <option
              selected=""
              value=""
            >
              Choose element
            </option>
            <option
              value="element-1"
            >
              Element 1
            </option>
            <option
              value="element-2"
            >
              Element 2
            </option>
            <option
              value="element-3"
            >
              Element 3
            </option>
          </select>
        </div>
        <span
          class="c-cyFBRX c-cyFBRX-qrXLX-as-span c-cyFBRX-iEkYDt-size--1 c-cyFBRX-dYJjti-weight-regular c-cyFBRX-ihSObmv-css"
        >
          Help for user
        </span>
      </div>
    </div>
  </body>,
  "container": <div>
    <div
      class="c-dhzjXW c-dhzjXW-kiHjTX-spacing-015 c-dhzjXW-iTKOFX-direction-column"
    >
      <div
        class="c-dhzjXW c-dhzjXW-kiHjTX-spacing-015 c-dhzjXW-iTKOFX-direction-column"
      >
        <label
          class="c-cyFBRX c-cyFBRX-qrXLX-as-label c-cyFBRX-dYJjti-weight-regular c-cyFBRX-icyFBRX-css"
          for=":r5:"
        >
          Input label
        </label>
        <select
          class="c-ciXJzL"
          id=":r5:"
        >
          <option
            selected=""
            value=""
          >
            Choose element
          </option>
          <option
            value="element-1"
          >
            Element 1
          </option>
          <option
            value="element-2"
          >
            Element 2
          </option>
          <option
            value="element-3"
          >
            Element 3
          </option>
        </select>
      </div>
      <span
        class="c-cyFBRX c-cyFBRX-qrXLX-as-span c-cyFBRX-iEkYDt-size--1 c-cyFBRX-dYJjti-weight-regular c-cyFBRX-ihSObmv-css"
      >
        Help for user
      </span>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`Storyshots Components/Formik Main 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body
    class="sb-show-nopreview"
  >
    <div>
      <form
        action="#"
      >
        <fieldset
          class="c-obFYN c-dhzjXW c-dhzjXW-fbjddq-spacing-3 c-dhzjXW-iTKOFX-direction-column c-dhzjXW-ioTNZo-css"
        >
          <div
            class="c-dhzjXW c-dhzjXW-kiHjTX-spacing-015 c-dhzjXW-iTKOFX-direction-column"
          >
            <div
              class="c-dhzjXW c-dhzjXW-kiHjTX-spacing-015 c-dhzjXW-iTKOFX-direction-column"
            >
              <label
                class="c-cyFBRX c-cyFBRX-qrXLX-as-label c-cyFBRX-dYJjti-weight-regular c-cyFBRX-icyFBRX-css"
                for=":r6:"
              >
                Name
              </label>
              <input
                class="c-bpAsxd c-bpAsxd-kDHgga-variant-default"
                id=":r6:"
                name="name"
                value=""
              />
            </div>
            <span
              class="c-cyFBRX c-cyFBRX-qrXLX-as-span c-cyFBRX-iEkYDt-size--1 c-cyFBRX-dYJjti-weight-regular c-cyFBRX-ihSObmv-css"
            >
              Enter your name
            </span>
          </div>
          <div
            class="c-dhzjXW c-dhzjXW-cBQSbj-spacing-2 c-dhzjXW-iTKOFX-direction-column"
          >
            <div
              class="c-dhzjXW c-dhzjXW-cBQSbj-spacing-2 c-dhzjXW-iTKOFX-direction-column"
            >
              <label
                class="c-cyFBRX c-cyFBRX-qrXLX-as-label c-cyFBRX-dYJjti-weight-regular c-cyFBRX-icyFBRX-css"
              >
                Choose element
              </label>
              <div
                class="c-dhzjXW c-dhzjXW-cBQSbj-spacing-2 c-dhzjXW-iTKOFX-direction-column c-dhzjXW-egHnsK-direction-row"
              >
                <div
                  class="c-dhzjXW c-dhzjXW-jroWjL-alignItems-center c-dhzjXW-imMwcw-spacing-1"
                >
                  <input
                    class="c-ezUtqA"
                    for=":r7:"
                    name="radio"
                    type="radio"
                    value="element-1"
                  />
                  <label
                    class="c-cyFBRX c-cyFBRX-qrXLX-as-label c-cyFBRX-dYJjti-weight-regular c-cyFBRX-icyFBRX-css"
                    id=":r7:"
                  >
                    Element 1
                  </label>
                </div>
                <div
                  class="c-dhzjXW c-dhzjXW-jroWjL-alignItems-center c-dhzjXW-imMwcw-spacing-1"
                >
                  <input
                    class="c-ezUtqA"
                    for=":r8:"
                    name="radio"
                    type="radio"
                    value="element-2"
                  />
                  <label
                    class="c-cyFBRX c-cyFBRX-qrXLX-as-label c-cyFBRX-dYJjti-weight-regular c-cyFBRX-icyFBRX-css"
                    id=":r8:"
                  >
                    Element 2
                  </label>
                </div>
                <div
                  class="c-dhzjXW c-dhzjXW-jroWjL-alignItems-center c-dhzjXW-imMwcw-spacing-1"
                >
                  <input
                    class="c-ezUtqA"
                    for=":r9:"
                    name="radio"
                    type="radio"
                    value="element-3"
                  />
                  <label
                    class="c-cyFBRX c-cyFBRX-qrXLX-as-label c-cyFBRX-dYJjti-weight-regular c-cyFBRX-icyFBRX-css"
                    id=":r9:"
                  >
                    Element 3
                  </label>
                </div>
              </div>
            </div>
          </div>
          <div
            class="c-dhzjXW c-dhzjXW-kiHjTX-spacing-015 c-dhzjXW-iTKOFX-direction-column"
          >
            <div
              class="c-dhzjXW c-dhzjXW-kiHjTX-spacing-015 c-dhzjXW-iTKOFX-direction-column"
            >
              <label
                class="c-cyFBRX c-cyFBRX-qrXLX-as-label c-cyFBRX-dYJjti-weight-regular c-cyFBRX-icyFBRX-css"
                for=":ra:"
              >
                Choose select element
              </label>
              <select
                class="c-ciXJzL"
                id=":ra:"
                name="option"
              >
                <option
                  value=""
                >
                  Choose element
                </option>
                <option
                  value="element-1"
                >
                  Element 1
                </option>
                <option
                  value="element-2"
                >
                  Element 2
                </option>
                <option
                  value="element-3"
                >
                  Element 3
                </option>
              </select>
            </div>
            <span
              class="c-cyFBRX c-cyFBRX-qrXLX-as-span c-cyFBRX-iEkYDt-size--1 c-cyFBRX-dYJjti-weight-regular c-cyFBRX-ihSObmv-css"
            >
              Helper text
            </span>
          </div>
          <div
            class="c-dhzjXW c-dhzjXW-kiHjTX-spacing-015 c-dhzjXW-iTKOFX-direction-column"
          >
            <div
              class="c-dhzjXW c-dhzjXW-jroWjL-alignItems-center c-dhzjXW-kiHjTX-spacing-015 c-dhzjXW-ejCoEP-direction-row"
            >
              <input
                class="c-kavqrr c-kavqrr-eFKUPz-size-sm"
                id=":rb:"
                name="agreeTerms"
                type="checkbox"
                value="false"
              />
              <label
                class="c-cyFBRX c-cyFBRX-qrXLX-as-label c-cyFBRX-dYJjti-weight-regular c-cyFBRX-icyFBRX-css"
                for=":rb:"
              >
                Agree terms
              </label>
            </div>
          </div>
          <button
            class="c-gCjpHZ c-gCjpHZ-kPDsqb-variant-primary c-gCjpHZ-kfXiog-rounded-true c-gCjpHZ-fJQHxA-disabled-false"
            type="submit"
          >
            Submit
          </button>
        </fieldset>
      </form>
    </div>
  </body>,
  "container": <div>
    <form
      action="#"
    >
      <fieldset
        class="c-obFYN c-dhzjXW c-dhzjXW-fbjddq-spacing-3 c-dhzjXW-iTKOFX-direction-column c-dhzjXW-ioTNZo-css"
      >
        <div
          class="c-dhzjXW c-dhzjXW-kiHjTX-spacing-015 c-dhzjXW-iTKOFX-direction-column"
        >
          <div
            class="c-dhzjXW c-dhzjXW-kiHjTX-spacing-015 c-dhzjXW-iTKOFX-direction-column"
          >
            <label
              class="c-cyFBRX c-cyFBRX-qrXLX-as-label c-cyFBRX-dYJjti-weight-regular c-cyFBRX-icyFBRX-css"
              for=":r6:"
            >
              Name
            </label>
            <input
              class="c-bpAsxd c-bpAsxd-kDHgga-variant-default"
              id=":r6:"
              name="name"
              value=""
            />
          </div>
          <span
            class="c-cyFBRX c-cyFBRX-qrXLX-as-span c-cyFBRX-iEkYDt-size--1 c-cyFBRX-dYJjti-weight-regular c-cyFBRX-ihSObmv-css"
          >
            Enter your name
          </span>
        </div>
        <div
          class="c-dhzjXW c-dhzjXW-cBQSbj-spacing-2 c-dhzjXW-iTKOFX-direction-column"
        >
          <div
            class="c-dhzjXW c-dhzjXW-cBQSbj-spacing-2 c-dhzjXW-iTKOFX-direction-column"
          >
            <label
              class="c-cyFBRX c-cyFBRX-qrXLX-as-label c-cyFBRX-dYJjti-weight-regular c-cyFBRX-icyFBRX-css"
            >
              Choose element
            </label>
            <div
              class="c-dhzjXW c-dhzjXW-cBQSbj-spacing-2 c-dhzjXW-iTKOFX-direction-column c-dhzjXW-egHnsK-direction-row"
            >
              <div
                class="c-dhzjXW c-dhzjXW-jroWjL-alignItems-center c-dhzjXW-imMwcw-spacing-1"
              >
                <input
                  class="c-ezUtqA"
                  for=":r7:"
                  name="radio"
                  type="radio"
                  value="element-1"
                />
                <label
                  class="c-cyFBRX c-cyFBRX-qrXLX-as-label c-cyFBRX-dYJjti-weight-regular c-cyFBRX-icyFBRX-css"
                  id=":r7:"
                >
                  Element 1
                </label>
              </div>
              <div
                class="c-dhzjXW c-dhzjXW-jroWjL-alignItems-center c-dhzjXW-imMwcw-spacing-1"
              >
                <input
                  class="c-ezUtqA"
                  for=":r8:"
                  name="radio"
                  type="radio"
                  value="element-2"
                />
                <label
                  class="c-cyFBRX c-cyFBRX-qrXLX-as-label c-cyFBRX-dYJjti-weight-regular c-cyFBRX-icyFBRX-css"
                  id=":r8:"
                >
                  Element 2
                </label>
              </div>
              <div
                class="c-dhzjXW c-dhzjXW-jroWjL-alignItems-center c-dhzjXW-imMwcw-spacing-1"
              >
                <input
                  class="c-ezUtqA"
                  for=":r9:"
                  name="radio"
                  type="radio"
                  value="element-3"
                />
                <label
                  class="c-cyFBRX c-cyFBRX-qrXLX-as-label c-cyFBRX-dYJjti-weight-regular c-cyFBRX-icyFBRX-css"
                  id=":r9:"
                >
                  Element 3
                </label>
              </div>
            </div>
          </div>
        </div>
        <div
          class="c-dhzjXW c-dhzjXW-kiHjTX-spacing-015 c-dhzjXW-iTKOFX-direction-column"
        >
          <div
            class="c-dhzjXW c-dhzjXW-kiHjTX-spacing-015 c-dhzjXW-iTKOFX-direction-column"
          >
            <label
              class="c-cyFBRX c-cyFBRX-qrXLX-as-label c-cyFBRX-dYJjti-weight-regular c-cyFBRX-icyFBRX-css"
              for=":ra:"
            >
              Choose select element
            </label>
            <select
              class="c-ciXJzL"
              id=":ra:"
              name="option"
            >
              <option
                value=""
              >
                Choose element
              </option>
              <option
                value="element-1"
              >
                Element 1
              </option>
              <option
                value="element-2"
              >
                Element 2
              </option>
              <option
                value="element-3"
              >
                Element 3
              </option>
            </select>
          </div>
          <span
            class="c-cyFBRX c-cyFBRX-qrXLX-as-span c-cyFBRX-iEkYDt-size--1 c-cyFBRX-dYJjti-weight-regular c-cyFBRX-ihSObmv-css"
          >
            Helper text
          </span>
        </div>
        <div
          class="c-dhzjXW c-dhzjXW-kiHjTX-spacing-015 c-dhzjXW-iTKOFX-direction-column"
        >
          <div
            class="c-dhzjXW c-dhzjXW-jroWjL-alignItems-center c-dhzjXW-kiHjTX-spacing-015 c-dhzjXW-ejCoEP-direction-row"
          >
            <input
              class="c-kavqrr c-kavqrr-eFKUPz-size-sm"
              id=":rb:"
              name="agreeTerms"
              type="checkbox"
              value="false"
            />
            <label
              class="c-cyFBRX c-cyFBRX-qrXLX-as-label c-cyFBRX-dYJjti-weight-regular c-cyFBRX-icyFBRX-css"
              for=":rb:"
            >
              Agree terms
            </label>
          </div>
        </div>
        <button
          class="c-gCjpHZ c-gCjpHZ-kPDsqb-variant-primary c-gCjpHZ-kfXiog-rounded-true c-gCjpHZ-fJQHxA-disabled-false"
          type="submit"
        >
          Submit
        </button>
      </fieldset>
    </form>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`Storyshots Components/Input Main 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body
    class="sb-show-nopreview"
  >
    <div>
      <input
        class="c-bpAsxd c-bpAsxd-kDHgga-variant-default"
        placeholder="Enter text"
      />
    </div>
  </body>,
  "container": <div>
    <input
      class="c-bpAsxd c-bpAsxd-kDHgga-variant-default"
      placeholder="Enter text"
    />
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`Storyshots Components/Radio Group 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body
    class="sb-show-nopreview"
  >
    <div>
      <div
        class="c-dhzjXW c-dhzjXW-cBQSbj-spacing-2 c-dhzjXW-iTKOFX-direction-column"
      >
        <div
          class="c-dhzjXW c-dhzjXW-jroWjL-alignItems-center c-dhzjXW-imMwcw-spacing-1"
        >
          <input
            class="c-ezUtqA"
            for=":rc:"
            name="element"
            type="radio"
            value="element-1"
          />
          <label
            class="c-cyFBRX c-cyFBRX-qrXLX-as-label c-cyFBRX-dYJjti-weight-regular c-cyFBRX-icyFBRX-css"
            id=":rc:"
          >
            Element 1
          </label>
        </div>
        <div
          class="c-dhzjXW c-dhzjXW-jroWjL-alignItems-center c-dhzjXW-imMwcw-spacing-1"
        >
          <input
            class="c-ezUtqA"
            for=":rd:"
            name="element"
            type="radio"
            value="element-2"
          />
          <label
            class="c-cyFBRX c-cyFBRX-qrXLX-as-label c-cyFBRX-dYJjti-weight-regular c-cyFBRX-icyFBRX-css"
            id=":rd:"
          >
            Element 2
          </label>
        </div>
        <div
          class="c-dhzjXW c-dhzjXW-jroWjL-alignItems-center c-dhzjXW-imMwcw-spacing-1"
        >
          <input
            class="c-ezUtqA"
            for=":re:"
            name="element"
            type="radio"
            value="element-3"
          />
          <label
            class="c-cyFBRX c-cyFBRX-qrXLX-as-label c-cyFBRX-dYJjti-weight-regular c-cyFBRX-icyFBRX-css"
            id=":re:"
          >
            Element 3
          </label>
        </div>
      </div>
    </div>
  </body>,
  "container": <div>
    <div
      class="c-dhzjXW c-dhzjXW-cBQSbj-spacing-2 c-dhzjXW-iTKOFX-direction-column"
    >
      <div
        class="c-dhzjXW c-dhzjXW-jroWjL-alignItems-center c-dhzjXW-imMwcw-spacing-1"
      >
        <input
          class="c-ezUtqA"
          for=":rc:"
          name="element"
          type="radio"
          value="element-1"
        />
        <label
          class="c-cyFBRX c-cyFBRX-qrXLX-as-label c-cyFBRX-dYJjti-weight-regular c-cyFBRX-icyFBRX-css"
          id=":rc:"
        >
          Element 1
        </label>
      </div>
      <div
        class="c-dhzjXW c-dhzjXW-jroWjL-alignItems-center c-dhzjXW-imMwcw-spacing-1"
      >
        <input
          class="c-ezUtqA"
          for=":rd:"
          name="element"
          type="radio"
          value="element-2"
        />
        <label
          class="c-cyFBRX c-cyFBRX-qrXLX-as-label c-cyFBRX-dYJjti-weight-regular c-cyFBRX-icyFBRX-css"
          id=":rd:"
        >
          Element 2
        </label>
      </div>
      <div
        class="c-dhzjXW c-dhzjXW-jroWjL-alignItems-center c-dhzjXW-imMwcw-spacing-1"
      >
        <input
          class="c-ezUtqA"
          for=":re:"
          name="element"
          type="radio"
          value="element-3"
        />
        <label
          class="c-cyFBRX c-cyFBRX-qrXLX-as-label c-cyFBRX-dYJjti-weight-regular c-cyFBRX-icyFBRX-css"
          id=":re:"
        >
          Element 3
        </label>
      </div>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`Storyshots Components/Radio Main 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body
    class="sb-show-nopreview"
  >
    <div>
      <div
        class="c-dhzjXW c-dhzjXW-jroWjL-alignItems-center c-dhzjXW-imMwcw-spacing-1"
      >
        <input
          class="c-ezUtqA"
          for=":rf:"
          type="radio"
        />
        <label
          class="c-cyFBRX c-cyFBRX-qrXLX-as-label c-cyFBRX-dYJjti-weight-regular c-cyFBRX-icyFBRX-css"
          id=":rf:"
        >
          Element 1
        </label>
      </div>
    </div>
  </body>,
  "container": <div>
    <div
      class="c-dhzjXW c-dhzjXW-jroWjL-alignItems-center c-dhzjXW-imMwcw-spacing-1"
    >
      <input
        class="c-ezUtqA"
        for=":rf:"
        type="radio"
      />
      <label
        class="c-cyFBRX c-cyFBRX-qrXLX-as-label c-cyFBRX-dYJjti-weight-regular c-cyFBRX-icyFBRX-css"
        id=":rf:"
      >
        Element 1
      </label>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`Storyshots Components/Select Main 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body
    class="sb-show-nopreview"
  >
    <div>
      <select
        class="c-ciXJzL"
      >
        <option
          selected=""
          value=""
        >
          Choose element
        </option>
        <option
          value="element-1"
        >
          Element 1
        </option>
        <option
          value="element-2"
        >
          Element 2
        </option>
        <option
          value="element-3"
        >
          Element 3
        </option>
      </select>
    </div>
  </body>,
  "container": <div>
    <select
      class="c-ciXJzL"
    >
      <option
        selected=""
        value=""
      >
        Choose element
      </option>
      <option
        value="element-1"
      >
        Element 1
      </option>
      <option
        value="element-2"
      >
        Element 2
      </option>
      <option
        value="element-3"
      >
        Element 3
      </option>
    </select>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`Storyshots Components/Stack Direction Column 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body
    class="sb-show-nopreview"
  >
    <div>
      <div
        class="c-dhzjXW c-dhzjXW-imMwcw-spacing-1 c-dhzjXW-iTKOFX-direction-column c-dhzjXW-idSgunW-css"
      >
        <div>
          Item 
          1
        </div>
        <div>
          Item 
          2
        </div>
        <div>
          Item 
          3
        </div>
        <div>
          Item 
          4
        </div>
        <div>
          Item 
          5
        </div>
        <div>
          Item 
          6
        </div>
        <div>
          Item 
          7
        </div>
        <div>
          Item 
          8
        </div>
      </div>
    </div>
  </body>,
  "container": <div>
    <div
      class="c-dhzjXW c-dhzjXW-imMwcw-spacing-1 c-dhzjXW-iTKOFX-direction-column c-dhzjXW-idSgunW-css"
    >
      <div>
        Item 
        1
      </div>
      <div>
        Item 
        2
      </div>
      <div>
        Item 
        3
      </div>
      <div>
        Item 
        4
      </div>
      <div>
        Item 
        5
      </div>
      <div>
        Item 
        6
      </div>
      <div>
        Item 
        7
      </div>
      <div>
        Item 
        8
      </div>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`Storyshots Components/Stack Full Width 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body
    class="sb-show-nopreview"
  >
    <div>
      <div
        class="c-dhzjXW c-dhzjXW-fGHEql-fullWidth-true c-dhzjXW-imMwcw-spacing-1 c-dhzjXW-iTKOFX-direction-column c-dhzjXW-idSgunW-css"
      >
        <div>
          Item 
          1
        </div>
        <div>
          Item 
          2
        </div>
        <div>
          Item 
          3
        </div>
        <div>
          Item 
          4
        </div>
        <div>
          Item 
          5
        </div>
        <div>
          Item 
          6
        </div>
        <div>
          Item 
          7
        </div>
        <div>
          Item 
          8
        </div>
      </div>
    </div>
  </body>,
  "container": <div>
    <div
      class="c-dhzjXW c-dhzjXW-fGHEql-fullWidth-true c-dhzjXW-imMwcw-spacing-1 c-dhzjXW-iTKOFX-direction-column c-dhzjXW-idSgunW-css"
    >
      <div>
        Item 
        1
      </div>
      <div>
        Item 
        2
      </div>
      <div>
        Item 
        3
      </div>
      <div>
        Item 
        4
      </div>
      <div>
        Item 
        5
      </div>
      <div>
        Item 
        6
      </div>
      <div>
        Item 
        7
      </div>
      <div>
        Item 
        8
      </div>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`Storyshots Components/Stack Main 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body
    class="sb-show-nopreview"
  >
    <div>
      <div
        class="c-dhzjXW c-dhzjXW-flWDnm-fullWidth-false c-dhzjXW-imMwcw-spacing-1 c-dhzjXW-ilkJghS-css"
      >
        <div>
          Item 
          1
        </div>
        <div>
          Item 
          2
        </div>
        <div>
          Item 
          3
        </div>
      </div>
    </div>
  </body>,
  "container": <div>
    <div
      class="c-dhzjXW c-dhzjXW-flWDnm-fullWidth-false c-dhzjXW-imMwcw-spacing-1 c-dhzjXW-ilkJghS-css"
    >
      <div>
        Item 
        1
      </div>
      <div>
        Item 
        2
      </div>
      <div>
        Item 
        3
      </div>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`Storyshots Components/Text Colors 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body
    class="sb-show-nopreview"
  >
    <div>
      <p
        class="c-cyFBRX c-cyFBRX-qrXLX-as-p c-cyFBRX-dYJjti-weight-regular c-cyFBRX-iixnjYu-css"
      >
        (
        primary
        ) 
        I'm Text component
      </p>
      <p
        class="c-cyFBRX c-cyFBRX-qrXLX-as-p c-cyFBRX-dYJjti-weight-regular c-cyFBRX-ilkpwJe-css"
      >
        (
        primary-dark-0
        ) 
        I'm Text component
      </p>
      <p
        class="c-cyFBRX c-cyFBRX-qrXLX-as-p c-cyFBRX-dYJjti-weight-regular c-cyFBRX-iidHARL-css"
      >
        (
        primary-dark-1
        ) 
        I'm Text component
      </p>
      <p
        class="c-cyFBRX c-cyFBRX-qrXLX-as-p c-cyFBRX-dYJjti-weight-regular c-cyFBRX-ifoWNOY-css"
      >
        (
        primary-dark-2
        ) 
        I'm Text component
      </p>
      <p
        class="c-cyFBRX c-cyFBRX-qrXLX-as-p c-cyFBRX-dYJjti-weight-regular c-cyFBRX-icioRXF-css"
      >
        (
        primary-dark-3
        ) 
        I'm Text component
      </p>
      <p
        class="c-cyFBRX c-cyFBRX-qrXLX-as-p c-cyFBRX-dYJjti-weight-regular c-cyFBRX-ihYNQHo-css"
      >
        (
        primary-light-0
        ) 
        I'm Text component
      </p>
      <p
        class="c-cyFBRX c-cyFBRX-qrXLX-as-p c-cyFBRX-dYJjti-weight-regular c-cyFBRX-ieOrbTp-css"
      >
        (
        primary-light-1
        ) 
        I'm Text component
      </p>
      <p
        class="c-cyFBRX c-cyFBRX-qrXLX-as-p c-cyFBRX-dYJjti-weight-regular c-cyFBRX-irFaVu-css"
      >
        (
        primary-light-2
        ) 
        I'm Text component
      </p>
      <p
        class="c-cyFBRX c-cyFBRX-qrXLX-as-p c-cyFBRX-dYJjti-weight-regular c-cyFBRX-iiwDVGr-css"
      >
        (
        primary-light-3
        ) 
        I'm Text component
      </p>
      <p
        class="c-cyFBRX c-cyFBRX-qrXLX-as-p c-cyFBRX-dYJjti-weight-regular c-cyFBRX-ijvmXwi-css"
      >
        (
        primary-saturate
        ) 
        I'm Text component
      </p>
      <p
        class="c-cyFBRX c-cyFBRX-qrXLX-as-p c-cyFBRX-dYJjti-weight-regular c-cyFBRX-ibhizWb-css"
      >
        (
        primary-desaturate
        ) 
        I'm Text component
      </p>
      <p
        class="c-cyFBRX c-cyFBRX-qrXLX-as-p c-cyFBRX-dYJjti-weight-regular c-cyFBRX-icHtIMp-css"
      >
        (
        black
        ) 
        I'm Text component
      </p>
      <p
        class="c-cyFBRX c-cyFBRX-qrXLX-as-p c-cyFBRX-dYJjti-weight-regular c-cyFBRX-ifhJkSB-css"
      >
        (
        black-dark-0
        ) 
        I'm Text component
      </p>
      <p
        class="c-cyFBRX c-cyFBRX-qrXLX-as-p c-cyFBRX-dYJjti-weight-regular c-cyFBRX-ikTYnWA-css"
      >
        (
        black-dark-1
        ) 
        I'm Text component
      </p>
      <p
        class="c-cyFBRX c-cyFBRX-qrXLX-as-p c-cyFBRX-dYJjti-weight-regular c-cyFBRX-ieERkff-css"
      >
        (
        black-dark-2
        ) 
        I'm Text component
      </p>
      <p
        class="c-cyFBRX c-cyFBRX-qrXLX-as-p c-cyFBRX-dYJjti-weight-regular c-cyFBRX-ikrgnje-css"
      >
        (
        black-dark-3
        ) 
        I'm Text component
      </p>
      <p
        class="c-cyFBRX c-cyFBRX-qrXLX-as-p c-cyFBRX-dYJjti-weight-regular c-cyFBRX-idHNn-css"
      >
        (
        black-light-0
        ) 
        I'm Text component
      </p>
      <p
        class="c-cyFBRX c-cyFBRX-qrXLX-as-p c-cyFBRX-dYJjti-weight-regular c-cyFBRX-ikZlqpC-css"
      >
        (
        black-light-1
        ) 
        I'm Text component
      </p>
      <p
        class="c-cyFBRX c-cyFBRX-qrXLX-as-p c-cyFBRX-dYJjti-weight-regular c-cyFBRX-ijJzZGB-css"
      >
        (
        black-light-2
        ) 
        I'm Text component
      </p>
      <p
        class="c-cyFBRX c-cyFBRX-qrXLX-as-p c-cyFBRX-dYJjti-weight-regular c-cyFBRX-ijtlYJU-css"
      >
        (
        black-light-3
        ) 
        I'm Text component
      </p>
      <p
        class="c-cyFBRX c-cyFBRX-qrXLX-as-p c-cyFBRX-dYJjti-weight-regular c-cyFBRX-ijZqbQJ-css"
      >
        (
        black-saturate
        ) 
        I'm Text component
      </p>
      <p
        class="c-cyFBRX c-cyFBRX-qrXLX-as-p c-cyFBRX-dYJjti-weight-regular c-cyFBRX-ijdlvJo-css"
      >
        (
        black-desaturate
        ) 
        I'm Text component
      </p>
      <p
        class="c-cyFBRX c-cyFBRX-qrXLX-as-p c-cyFBRX-dYJjti-weight-regular c-cyFBRX-ifPSeYF-css"
      >
        (
        white
        ) 
        I'm Text component
      </p>
      <p
        class="c-cyFBRX c-cyFBRX-qrXLX-as-p c-cyFBRX-dYJjti-weight-regular c-cyFBRX-ifleocd-css"
      >
        (
        white-dark-0
        ) 
        I'm Text component
      </p>
      <p
        class="c-cyFBRX c-cyFBRX-qrXLX-as-p c-cyFBRX-dYJjti-weight-regular c-cyFBRX-icaThNU-css"
      >
        (
        white-dark-1
        ) 
        I'm Text component
      </p>
      <p
        class="c-cyFBRX c-cyFBRX-qrXLX-as-p c-cyFBRX-dYJjti-weight-regular c-cyFBRX-idzGhWz-css"
      >
        (
        white-dark-2
        ) 
        I'm Text component
      </p>
      <p
        class="c-cyFBRX c-cyFBRX-qrXLX-as-p c-cyFBRX-dYJjti-weight-regular c-cyFBRX-ipvbIq-css"
      >
        (
        white-dark-3
        ) 
        I'm Text component
      </p>
      <p
        class="c-cyFBRX c-cyFBRX-qrXLX-as-p c-cyFBRX-dYJjti-weight-regular c-cyFBRX-icTRyRT-css"
      >
        (
        white-light-0
        ) 
        I'm Text component
      </p>
      <p
        class="c-cyFBRX c-cyFBRX-qrXLX-as-p c-cyFBRX-dYJjti-weight-regular c-cyFBRX-ijEYcPu-css"
      >
        (
        white-light-1
        ) 
        I'm Text component
      </p>
      <p
        class="c-cyFBRX c-cyFBRX-qrXLX-as-p c-cyFBRX-dYJjti-weight-regular c-cyFBRX-ifevYcJ-css"
      >
        (
        white-light-2
        ) 
        I'm Text component
      </p>
      <p
        class="c-cyFBRX c-cyFBRX-qrXLX-as-p c-cyFBRX-dYJjti-weight-regular c-cyFBRX-iAgSBo-css"
      >
        (
        white-light-3
        ) 
        I'm Text component
      </p>
      <p
        class="c-cyFBRX c-cyFBRX-qrXLX-as-p c-cyFBRX-dYJjti-weight-regular c-cyFBRX-iNqdPx-css"
      >
        (
        white-saturate
        ) 
        I'm Text component
      </p>
      <p
        class="c-cyFBRX c-cyFBRX-qrXLX-as-p c-cyFBRX-dYJjti-weight-regular c-cyFBRX-idzeBkI-css"
      >
        (
        white-desaturate
        ) 
        I'm Text component
      </p>
      <p
        class="c-cyFBRX c-cyFBRX-qrXLX-as-p c-cyFBRX-dYJjti-weight-regular c-cyFBRX-ieGkdqv-css"
      >
        (
        bg
        ) 
        I'm Text component
      </p>
      <p
        class="c-cyFBRX c-cyFBRX-qrXLX-as-p c-cyFBRX-dYJjti-weight-regular c-cyFBRX-iirpGhD-css"
      >
        (
        bg-dark-0
        ) 
        I'm Text component
      </p>
      <p
        class="c-cyFBRX c-cyFBRX-qrXLX-as-p c-cyFBRX-dYJjti-weight-regular c-cyFBRX-ikAmkAa-css"
      >
        (
        bg-dark-1
        ) 
        I'm Text component
      </p>
      <p
        class="c-cyFBRX c-cyFBRX-qrXLX-as-p c-cyFBRX-dYJjti-weight-regular c-cyFBRX-icVAndF-css"
      >
        (
        bg-dark-2
        ) 
        I'm Text component
      </p>
      <p
        class="c-cyFBRX c-cyFBRX-qrXLX-as-p c-cyFBRX-dYJjti-weight-regular c-cyFBRX-ifewRwc-css"
      >
        (
        bg-dark-3
        ) 
        I'm Text component
      </p>
      <p
        class="c-cyFBRX c-cyFBRX-qrXLX-as-p c-cyFBRX-dYJjti-weight-regular c-cyFBRX-ibpQmlV-css"
      >
        (
        bg-light-0
        ) 
        I'm Text component
      </p>
      <p
        class="c-cyFBRX c-cyFBRX-qrXLX-as-p c-cyFBRX-dYJjti-weight-regular c-cyFBRX-ijkkpNo-css"
      >
        (
        bg-light-1
        ) 
        I'm Text component
      </p>
      <p
        class="c-cyFBRX c-cyFBRX-qrXLX-as-p c-cyFBRX-dYJjti-weight-regular c-cyFBRX-iqZQWj-css"
      >
        (
        bg-light-2
        ) 
        I'm Text component
      </p>
      <p
        class="c-cyFBRX c-cyFBRX-qrXLX-as-p c-cyFBRX-dYJjti-weight-regular c-cyFBRX-iiltUxC-css"
      >
        (
        bg-light-3
        ) 
        I'm Text component
      </p>
      <p
        class="c-cyFBRX c-cyFBRX-qrXLX-as-p c-cyFBRX-dYJjti-weight-regular c-cyFBRX-ihrTeNT-css"
      >
        (
        bg-saturate
        ) 
        I'm Text component
      </p>
      <p
        class="c-cyFBRX c-cyFBRX-qrXLX-as-p c-cyFBRX-dYJjti-weight-regular c-cyFBRX-ioJrsa-css"
      >
        (
        bg-desaturate
        ) 
        I'm Text component
      </p>
      <p
        class="c-cyFBRX c-cyFBRX-qrXLX-as-p c-cyFBRX-dYJjti-weight-regular c-cyFBRX-icyFBRX-css"
      >
        (
        text
        ) 
        I'm Text component
      </p>
      <p
        class="c-cyFBRX c-cyFBRX-qrXLX-as-p c-cyFBRX-dYJjti-weight-regular c-cyFBRX-iAVjHn-css"
      >
        (
        text-dark-0
        ) 
        I'm Text component
      </p>
      <p
        class="c-cyFBRX c-cyFBRX-qrXLX-as-p c-cyFBRX-dYJjti-weight-regular c-cyFBRX-idPSQQi-css"
      >
        (
        text-dark-1
        ) 
        I'm Text component
      </p>
      <p
        class="c-cyFBRX c-cyFBRX-qrXLX-as-p c-cyFBRX-dYJjti-weight-regular c-cyFBRX-ibtQhRN-css"
      >
        (
        text-dark-2
        ) 
        I'm Text component
      </p>
      <p
        class="c-cyFBRX c-cyFBRX-qrXLX-as-p c-cyFBRX-dYJjti-weight-regular c-cyFBRX-ieINPaI-css"
      >
        (
        text-dark-3
        ) 
        I'm Text component
      </p>
      <p
        class="c-cyFBRX c-cyFBRX-qrXLX-as-p c-cyFBRX-dYJjti-weight-regular c-cyFBRX-ijYsKdx-css"
      >
        (
        text-light-0
        ) 
        I'm Text component
      </p>
      <p
        class="c-cyFBRX c-cyFBRX-qrXLX-as-p c-cyFBRX-dYJjti-weight-regular c-cyFBRX-ihYvGvU-css"
      >
        (
        text-light-1
        ) 
        I'm Text component
      </p>
      <p
        class="c-cyFBRX c-cyFBRX-qrXLX-as-p c-cyFBRX-dYJjti-weight-regular c-cyFBRX-ibZFWsj-css"
      >
        (
        text-light-2
        ) 
        I'm Text component
      </p>
      <p
        class="c-cyFBRX c-cyFBRX-qrXLX-as-p c-cyFBRX-dYJjti-weight-regular c-cyFBRX-ilpeCjC-css"
      >
        (
        text-light-3
        ) 
        I'm Text component
      </p>
      <p
        class="c-cyFBRX c-cyFBRX-qrXLX-as-p c-cyFBRX-dYJjti-weight-regular c-cyFBRX-ikaIEUj-css"
      >
        (
        text-saturate
        ) 
        I'm Text component
      </p>
      <p
        class="c-cyFBRX c-cyFBRX-qrXLX-as-p c-cyFBRX-dYJjti-weight-regular c-cyFBRX-ikZckXm-css"
      >
        (
        text-desaturate
        ) 
        I'm Text component
      </p>
      <p
        class="c-cyFBRX c-cyFBRX-qrXLX-as-p c-cyFBRX-dYJjti-weight-regular c-cyFBRX-ihLMfHx-css"
      >
        (
        foreground
        ) 
        I'm Text component
      </p>
      <p
        class="c-cyFBRX c-cyFBRX-qrXLX-as-p c-cyFBRX-dYJjti-weight-regular c-cyFBRX-icKkddl-css"
      >
        (
        foreground-dark-0
        ) 
        I'm Text component
      </p>
      <p
        class="c-cyFBRX c-cyFBRX-qrXLX-as-p c-cyFBRX-dYJjti-weight-regular c-cyFBRX-iVXBSw-css"
      >
        (
        foreground-dark-1
        ) 
        I'm Text component
      </p>
      <p
        class="c-cyFBRX c-cyFBRX-qrXLX-as-p c-cyFBRX-dYJjti-weight-regular c-cyFBRX-ihSObmv-css"
      >
        (
        foreground-dark-2
        ) 
        I'm Text component
      </p>
      <p
        class="c-cyFBRX c-cyFBRX-qrXLX-as-p c-cyFBRX-dYJjti-weight-regular c-cyFBRX-igeBAbG-css"
      >
        (
        foreground-dark-3
        ) 
        I'm Text component
      </p>
      <p
        class="c-cyFBRX c-cyFBRX-qrXLX-as-p c-cyFBRX-dYJjti-weight-regular c-cyFBRX-ihvCXLH-css"
      >
        (
        foreground-light-0
        ) 
        I'm Text component
      </p>
      <p
        class="c-cyFBRX c-cyFBRX-qrXLX-as-p c-cyFBRX-dYJjti-weight-regular c-cyFBRX-ihbESJy-css"
      >
        (
        foreground-light-1
        ) 
        I'm Text component
      </p>
      <p
        class="c-cyFBRX c-cyFBRX-qrXLX-as-p c-cyFBRX-dYJjti-weight-regular c-cyFBRX-icXTnaN-css"
      >
        (
        foreground-light-2
        ) 
        I'm Text component
      </p>
      <p
        class="c-cyFBRX c-cyFBRX-qrXLX-as-p c-cyFBRX-dYJjti-weight-regular c-cyFBRX-icDVhYE-css"
      >
        (
        foreground-light-3
        ) 
        I'm Text component
      </p>
      <p
        class="c-cyFBRX c-cyFBRX-qrXLX-as-p c-cyFBRX-dYJjti-weight-regular c-cyFBRX-ikCnHpR-css"
      >
        (
        foreground-saturate
        ) 
        I'm Text component
      </p>
      <p
        class="c-cyFBRX c-cyFBRX-qrXLX-as-p c-cyFBRX-dYJjti-weight-regular c-cyFBRX-ieZkOgU-css"
      >
        (
        foreground-desaturate
        ) 
        I'm Text component
      </p>
      <p
        class="c-cyFBRX c-cyFBRX-qrXLX-as-p c-cyFBRX-dYJjti-weight-regular c-cyFBRX-ieQVRIy-css"
      >
        (
        orange
        ) 
        I'm Text component
      </p>
      <p
        class="c-cyFBRX c-cyFBRX-qrXLX-as-p c-cyFBRX-dYJjti-weight-regular c-cyFBRX-ijXdIWC-css"
      >
        (
        orange-dark-0
        ) 
        I'm Text component
      </p>
      <p
        class="c-cyFBRX c-cyFBRX-qrXLX-as-p c-cyFBRX-dYJjti-weight-regular c-cyFBRX-ieXOuof-css"
      >
        (
        orange-dark-1
        ) 
        I'm Text component
      </p>
      <p
        class="c-cyFBRX c-cyFBRX-qrXLX-as-p c-cyFBRX-dYJjti-weight-regular c-cyFBRX-ibwLCPQ-css"
      >
        (
        orange-dark-2
        ) 
        I'm Text component
      </p>
      <p
        class="c-cyFBRX c-cyFBRX-qrXLX-as-p c-cyFBRX-dYJjti-weight-regular c-cyFBRX-ihMRXGp-css"
      >
        (
        orange-dark-3
        ) 
        I'm Text component
      </p>
      <p
        class="c-cyFBRX c-cyFBRX-qrXLX-as-p c-cyFBRX-dYJjti-weight-regular c-cyFBRX-ieoAtAM-css"
      >
        (
        orange-light-0
        ) 
        I'm Text component
      </p>
      <p
        class="c-cyFBRX c-cyFBRX-qrXLX-as-p c-cyFBRX-dYJjti-weight-regular c-cyFBRX-ifOcHhJ-css"
      >
        (
        orange-light-1
        ) 
        I'm Text component
      </p>
      <p
        class="c-cyFBRX c-cyFBRX-qrXLX-as-p c-cyFBRX-dYJjti-weight-regular c-cyFBRX-ijZaTby-css"
      >
        (
        orange-light-2
        ) 
        I'm Text component
      </p>
      <p
        class="c-cyFBRX c-cyFBRX-qrXLX-as-p c-cyFBRX-dYJjti-weight-regular c-cyFBRX-ijhxjz-css"
      >
        (
        orange-light-3
        ) 
        I'm Text component
      </p>
      <p
        class="c-cyFBRX c-cyFBRX-qrXLX-as-p c-cyFBRX-dYJjti-weight-regular c-cyFBRX-ikikieC-css"
      >
        (
        orange-saturate
        ) 
        I'm Text component
      </p>
      <p
        class="c-cyFBRX c-cyFBRX-qrXLX-as-p c-cyFBRX-dYJjti-weight-regular c-cyFBRX-ibvYyfj-css"
      >
        (
        orange-desaturate
        ) 
        I'm Text component
      </p>
      <p
        class="c-cyFBRX c-cyFBRX-qrXLX-as-p c-cyFBRX-dYJjti-weight-regular c-cyFBRX-idXSmcC-css"
      >
        (
        yellow
        ) 
        I'm Text component
      </p>
      <p
        class="c-cyFBRX c-cyFBRX-qrXLX-as-p c-cyFBRX-dYJjti-weight-regular c-cyFBRX-isLOlm-css"
      >
        (
        yellow-dark-0
        ) 
        I'm Text component
      </p>
      <p
        class="c-cyFBRX c-cyFBRX-qrXLX-as-p c-cyFBRX-dYJjti-weight-regular c-cyFBRX-iiJeUCz-css"
      >
        (
        yellow-dark-1
        ) 
        I'm Text component
      </p>
      <p
        class="c-cyFBRX c-cyFBRX-qrXLX-as-p c-cyFBRX-dYJjti-weight-regular c-cyFBRX-idQRKbw-css"
      >
        (
        yellow-dark-2
        ) 
        I'm Text component
      </p>
      <p
        class="c-cyFBRX c-cyFBRX-qrXLX-as-p c-cyFBRX-dYJjti-weight-regular c-cyFBRX-iRPgTN-css"
      >
        (
        yellow-dark-3
        ) 
        I'm Text component
      </p>
      <p
        class="c-cyFBRX c-cyFBRX-qrXLX-as-p c-cyFBRX-dYJjti-weight-regular c-cyFBRX-iiPzqBU-css"
      >
        (
        yellow-light-0
        ) 
        I'm Text component
      </p>
      <p
        class="c-cyFBRX c-cyFBRX-qrXLX-as-p c-cyFBRX-dYJjti-weight-regular c-cyFBRX-idPnVeR-css"
      >
        (
        yellow-light-1
        ) 
        I'm Text component
      </p>
      <p
        class="c-cyFBRX c-cyFBRX-qrXLX-as-p c-cyFBRX-dYJjti-weight-regular c-cyFBRX-iiUJsUW-css"
      >
        (
        yellow-light-2
        ) 
        I'm Text component
      </p>
      <p
        class="c-cyFBRX c-cyFBRX-qrXLX-as-p c-cyFBRX-dYJjti-weight-regular c-cyFBRX-idUxXxT-css"
      >
        (
        yellow-light-3
        ) 
        I'm Text component
      </p>
      <p
        class="c-cyFBRX c-cyFBRX-qrXLX-as-p c-cyFBRX-dYJjti-weight-regular c-cyFBRX-ibkYzRm-css"
      >
        (
        yellow-saturate
        ) 
        I'm Text component
      </p>
      <p
        class="c-cyFBRX c-cyFBRX-qrXLX-as-p c-cyFBRX-dYJjti-weight-regular c-cyFBRX-ihqRFLf-css"
      >
        (
        yellow-desaturate
        ) 
        I'm Text component
      </p>
      <p
        class="c-cyFBRX c-cyFBRX-qrXLX-as-p c-cyFBRX-dYJjti-weight-regular c-cyFBRX-ikYTZoZ-css"
      >
        (
        green
        ) 
        I'm Text component
      </p>
      <p
        class="c-cyFBRX c-cyFBRX-qrXLX-as-p c-cyFBRX-dYJjti-weight-regular c-cyFBRX-icEtYjd-css"
      >
        (
        green-dark-0
        ) 
        I'm Text component
      </p>
      <p
        class="c-cyFBRX c-cyFBRX-qrXLX-as-p c-cyFBRX-dYJjti-weight-regular c-cyFBRX-iftVcwE-css"
      >
        (
        green-dark-1
        ) 
        I'm Text component
      </p>
      <p
        class="c-cyFBRX c-cyFBRX-qrXLX-as-p c-cyFBRX-dYJjti-weight-regular c-cyFBRX-iiNWqQT-css"
      >
        (
        green-dark-2
        ) 
        I'm Text component
      </p>
      <p
        class="c-cyFBRX c-cyFBRX-qrXLX-as-p c-cyFBRX-dYJjti-weight-regular c-cyFBRX-iobLFy-css"
      >
        (
        green-dark-3
        ) 
        I'm Text component
      </p>
      <p
        class="c-cyFBRX c-cyFBRX-qrXLX-as-p c-cyFBRX-dYJjti-weight-regular c-cyFBRX-ifXeQNj-css"
      >
        (
        green-light-0
        ) 
        I'm Text component
      </p>
      <p
        class="c-cyFBRX c-cyFBRX-qrXLX-as-p c-cyFBRX-dYJjti-weight-regular c-cyFBRX-igfhmYm-css"
      >
        (
        green-light-1
        ) 
        I'm Text component
      </p>
      <p
        class="c-cyFBRX c-cyFBRX-qrXLX-as-p c-cyFBRX-dYJjti-weight-regular c-cyFBRX-idLgqYV-css"
      >
        (
        green-light-2
        ) 
        I'm Text component
      </p>
      <p
        class="c-cyFBRX c-cyFBRX-qrXLX-as-p c-cyFBRX-dYJjti-weight-regular c-cyFBRX-idTiNjY-css"
      >
        (
        green-light-3
        ) 
        I'm Text component
      </p>
      <p
        class="c-cyFBRX c-cyFBRX-qrXLX-as-p c-cyFBRX-dYJjti-weight-regular c-cyFBRX-iuFmDd-css"
      >
        (
        green-saturate
        ) 
        I'm Text component
      </p>
      <p
        class="c-cyFBRX c-cyFBRX-qrXLX-as-p c-cyFBRX-dYJjti-weight-regular c-cyFBRX-iedhVEE-css"
      >
        (
        green-desaturate
        ) 
        I'm Text component
      </p>
      <p
        class="c-cyFBRX c-cyFBRX-qrXLX-as-p c-cyFBRX-dYJjti-weight-regular c-cyFBRX-ibpRjqJ-css"
      >
        (
        red
        ) 
        I'm Text component
      </p>
      <p
        class="c-cyFBRX c-cyFBRX-qrXLX-as-p c-cyFBRX-dYJjti-weight-regular c-cyFBRX-ijRHnl-css"
      >
        (
        red-dark-0
        ) 
        I'm Text component
      </p>
      <p
        class="c-cyFBRX c-cyFBRX-qrXLX-as-p c-cyFBRX-dYJjti-weight-regular c-cyFBRX-icjgPEw-css"
      >
        (
        red-dark-1
        ) 
        I'm Text component
      </p>
      <p
        class="c-cyFBRX c-cyFBRX-qrXLX-as-p c-cyFBRX-dYJjti-weight-regular c-cyFBRX-ifoibeD-css"
      >
        (
        red-dark-2
        ) 
        I'm Text component
      </p>
      <p
        class="c-cyFBRX c-cyFBRX-qrXLX-as-p c-cyFBRX-dYJjti-weight-regular c-cyFBRX-ihnxjvO-css"
      >
        (
        red-dark-3
        ) 
        I'm Text component
      </p>
      <p
        class="c-cyFBRX c-cyFBRX-qrXLX-as-p c-cyFBRX-dYJjti-weight-regular c-cyFBRX-iopjBr-css"
      >
        (
        red-light-0
        ) 
        I'm Text component
      </p>
      <p
        class="c-cyFBRX c-cyFBRX-qrXLX-as-p c-cyFBRX-dYJjti-weight-regular c-cyFBRX-idyXLFG-css"
      >
        (
        red-light-1
        ) 
        I'm Text component
      </p>
      <p
        class="c-cyFBRX c-cyFBRX-qrXLX-as-p c-cyFBRX-dYJjti-weight-regular c-cyFBRX-icGnSpt-css"
      >
        (
        red-light-2
        ) 
        I'm Text component
      </p>
      <p
        class="c-cyFBRX c-cyFBRX-qrXLX-as-p c-cyFBRX-dYJjti-weight-regular c-cyFBRX-ifQWutI-css"
      >
        (
        red-light-3
        ) 
        I'm Text component
      </p>
      <p
        class="c-cyFBRX c-cyFBRX-qrXLX-as-p c-cyFBRX-dYJjti-weight-regular c-cyFBRX-ipzMap-css"
      >
        (
        red-saturate
        ) 
        I'm Text component
      </p>
      <p
        class="c-cyFBRX c-cyFBRX-qrXLX-as-p c-cyFBRX-dYJjti-weight-regular c-cyFBRX-igecSKE-css"
      >
        (
        red-desaturate
        ) 
        I'm Text component
      </p>
      <p
        class="c-cyFBRX c-cyFBRX-qrXLX-as-p c-cyFBRX-dYJjti-weight-regular c-cyFBRX-iXlZOi-css"
      >
        (
        error
        ) 
        I'm Text component
      </p>
      <p
        class="c-cyFBRX c-cyFBRX-qrXLX-as-p c-cyFBRX-dYJjti-weight-regular c-cyFBRX-ikeWtQC-css"
      >
        (
        error-dark-0
        ) 
        I'm Text component
      </p>
      <p
        class="c-cyFBRX c-cyFBRX-qrXLX-as-p c-cyFBRX-dYJjti-weight-regular c-cyFBRX-igvUaAn-css"
      >
        (
        error-dark-1
        ) 
        I'm Text component
      </p>
      <p
        class="c-cyFBRX c-cyFBRX-qrXLX-as-p c-cyFBRX-dYJjti-weight-regular c-cyFBRX-ibyQUqd-css"
      >
        (
        success
        ) 
        I'm Text component
      </p>
      <p
        class="c-cyFBRX c-cyFBRX-qrXLX-as-p c-cyFBRX-dYJjti-weight-regular c-cyFBRX-ierbNbl-css"
      >
        (
        success-dark-0
        ) 
        I'm Text component
      </p>
      <p
        class="c-cyFBRX c-cyFBRX-qrXLX-as-p c-cyFBRX-dYJjti-weight-regular c-cyFBRX-igZEUWQ-css"
      >
        (
        warning
        ) 
        I'm Text component
      </p>
      <p
        class="c-cyFBRX c-cyFBRX-qrXLX-as-p c-cyFBRX-dYJjti-weight-regular c-cyFBRX-idtZXdA-css"
      >
        (
        warning-dark-0
        ) 
        I'm Text component
      </p>
    </div>
  </body>,
  "container": <div>
    <p
      class="c-cyFBRX c-cyFBRX-qrXLX-as-p c-cyFBRX-dYJjti-weight-regular c-cyFBRX-iixnjYu-css"
    >
      (
      primary
      ) 
      I'm Text component
    </p>
    <p
      class="c-cyFBRX c-cyFBRX-qrXLX-as-p c-cyFBRX-dYJjti-weight-regular c-cyFBRX-ilkpwJe-css"
    >
      (
      primary-dark-0
      ) 
      I'm Text component
    </p>
    <p
      class="c-cyFBRX c-cyFBRX-qrXLX-as-p c-cyFBRX-dYJjti-weight-regular c-cyFBRX-iidHARL-css"
    >
      (
      primary-dark-1
      ) 
      I'm Text component
    </p>
    <p
      class="c-cyFBRX c-cyFBRX-qrXLX-as-p c-cyFBRX-dYJjti-weight-regular c-cyFBRX-ifoWNOY-css"
    >
      (
      primary-dark-2
      ) 
      I'm Text component
    </p>
    <p
      class="c-cyFBRX c-cyFBRX-qrXLX-as-p c-cyFBRX-dYJjti-weight-regular c-cyFBRX-icioRXF-css"
    >
      (
      primary-dark-3
      ) 
      I'm Text component
    </p>
    <p
      class="c-cyFBRX c-cyFBRX-qrXLX-as-p c-cyFBRX-dYJjti-weight-regular c-cyFBRX-ihYNQHo-css"
    >
      (
      primary-light-0
      ) 
      I'm Text component
    </p>
    <p
      class="c-cyFBRX c-cyFBRX-qrXLX-as-p c-cyFBRX-dYJjti-weight-regular c-cyFBRX-ieOrbTp-css"
    >
      (
      primary-light-1
      ) 
      I'm Text component
    </p>
    <p
      class="c-cyFBRX c-cyFBRX-qrXLX-as-p c-cyFBRX-dYJjti-weight-regular c-cyFBRX-irFaVu-css"
    >
      (
      primary-light-2
      ) 
      I'm Text component
    </p>
    <p
      class="c-cyFBRX c-cyFBRX-qrXLX-as-p c-cyFBRX-dYJjti-weight-regular c-cyFBRX-iiwDVGr-css"
    >
      (
      primary-light-3
      ) 
      I'm Text component
    </p>
    <p
      class="c-cyFBRX c-cyFBRX-qrXLX-as-p c-cyFBRX-dYJjti-weight-regular c-cyFBRX-ijvmXwi-css"
    >
      (
      primary-saturate
      ) 
      I'm Text component
    </p>
    <p
      class="c-cyFBRX c-cyFBRX-qrXLX-as-p c-cyFBRX-dYJjti-weight-regular c-cyFBRX-ibhizWb-css"
    >
      (
      primary-desaturate
      ) 
      I'm Text component
    </p>
    <p
      class="c-cyFBRX c-cyFBRX-qrXLX-as-p c-cyFBRX-dYJjti-weight-regular c-cyFBRX-icHtIMp-css"
    >
      (
      black
      ) 
      I'm Text component
    </p>
    <p
      class="c-cyFBRX c-cyFBRX-qrXLX-as-p c-cyFBRX-dYJjti-weight-regular c-cyFBRX-ifhJkSB-css"
    >
      (
      black-dark-0
      ) 
      I'm Text component
    </p>
    <p
      class="c-cyFBRX c-cyFBRX-qrXLX-as-p c-cyFBRX-dYJjti-weight-regular c-cyFBRX-ikTYnWA-css"
    >
      (
      black-dark-1
      ) 
      I'm Text component
    </p>
    <p
      class="c-cyFBRX c-cyFBRX-qrXLX-as-p c-cyFBRX-dYJjti-weight-regular c-cyFBRX-ieERkff-css"
    >
      (
      black-dark-2
      ) 
      I'm Text component
    </p>
    <p
      class="c-cyFBRX c-cyFBRX-qrXLX-as-p c-cyFBRX-dYJjti-weight-regular c-cyFBRX-ikrgnje-css"
    >
      (
      black-dark-3
      ) 
      I'm Text component
    </p>
    <p
      class="c-cyFBRX c-cyFBRX-qrXLX-as-p c-cyFBRX-dYJjti-weight-regular c-cyFBRX-idHNn-css"
    >
      (
      black-light-0
      ) 
      I'm Text component
    </p>
    <p
      class="c-cyFBRX c-cyFBRX-qrXLX-as-p c-cyFBRX-dYJjti-weight-regular c-cyFBRX-ikZlqpC-css"
    >
      (
      black-light-1
      ) 
      I'm Text component
    </p>
    <p
      class="c-cyFBRX c-cyFBRX-qrXLX-as-p c-cyFBRX-dYJjti-weight-regular c-cyFBRX-ijJzZGB-css"
    >
      (
      black-light-2
      ) 
      I'm Text component
    </p>
    <p
      class="c-cyFBRX c-cyFBRX-qrXLX-as-p c-cyFBRX-dYJjti-weight-regular c-cyFBRX-ijtlYJU-css"
    >
      (
      black-light-3
      ) 
      I'm Text component
    </p>
    <p
      class="c-cyFBRX c-cyFBRX-qrXLX-as-p c-cyFBRX-dYJjti-weight-regular c-cyFBRX-ijZqbQJ-css"
    >
      (
      black-saturate
      ) 
      I'm Text component
    </p>
    <p
      class="c-cyFBRX c-cyFBRX-qrXLX-as-p c-cyFBRX-dYJjti-weight-regular c-cyFBRX-ijdlvJo-css"
    >
      (
      black-desaturate
      ) 
      I'm Text component
    </p>
    <p
      class="c-cyFBRX c-cyFBRX-qrXLX-as-p c-cyFBRX-dYJjti-weight-regular c-cyFBRX-ifPSeYF-css"
    >
      (
      white
      ) 
      I'm Text component
    </p>
    <p
      class="c-cyFBRX c-cyFBRX-qrXLX-as-p c-cyFBRX-dYJjti-weight-regular c-cyFBRX-ifleocd-css"
    >
      (
      white-dark-0
      ) 
      I'm Text component
    </p>
    <p
      class="c-cyFBRX c-cyFBRX-qrXLX-as-p c-cyFBRX-dYJjti-weight-regular c-cyFBRX-icaThNU-css"
    >
      (
      white-dark-1
      ) 
      I'm Text component
    </p>
    <p
      class="c-cyFBRX c-cyFBRX-qrXLX-as-p c-cyFBRX-dYJjti-weight-regular c-cyFBRX-idzGhWz-css"
    >
      (
      white-dark-2
      ) 
      I'm Text component
    </p>
    <p
      class="c-cyFBRX c-cyFBRX-qrXLX-as-p c-cyFBRX-dYJjti-weight-regular c-cyFBRX-ipvbIq-css"
    >
      (
      white-dark-3
      ) 
      I'm Text component
    </p>
    <p
      class="c-cyFBRX c-cyFBRX-qrXLX-as-p c-cyFBRX-dYJjti-weight-regular c-cyFBRX-icTRyRT-css"
    >
      (
      white-light-0
      ) 
      I'm Text component
    </p>
    <p
      class="c-cyFBRX c-cyFBRX-qrXLX-as-p c-cyFBRX-dYJjti-weight-regular c-cyFBRX-ijEYcPu-css"
    >
      (
      white-light-1
      ) 
      I'm Text component
    </p>
    <p
      class="c-cyFBRX c-cyFBRX-qrXLX-as-p c-cyFBRX-dYJjti-weight-regular c-cyFBRX-ifevYcJ-css"
    >
      (
      white-light-2
      ) 
      I'm Text component
    </p>
    <p
      class="c-cyFBRX c-cyFBRX-qrXLX-as-p c-cyFBRX-dYJjti-weight-regular c-cyFBRX-iAgSBo-css"
    >
      (
      white-light-3
      ) 
      I'm Text component
    </p>
    <p
      class="c-cyFBRX c-cyFBRX-qrXLX-as-p c-cyFBRX-dYJjti-weight-regular c-cyFBRX-iNqdPx-css"
    >
      (
      white-saturate
      ) 
      I'm Text component
    </p>
    <p
      class="c-cyFBRX c-cyFBRX-qrXLX-as-p c-cyFBRX-dYJjti-weight-regular c-cyFBRX-idzeBkI-css"
    >
      (
      white-desaturate
      ) 
      I'm Text component
    </p>
    <p
      class="c-cyFBRX c-cyFBRX-qrXLX-as-p c-cyFBRX-dYJjti-weight-regular c-cyFBRX-ieGkdqv-css"
    >
      (
      bg
      ) 
      I'm Text component
    </p>
    <p
      class="c-cyFBRX c-cyFBRX-qrXLX-as-p c-cyFBRX-dYJjti-weight-regular c-cyFBRX-iirpGhD-css"
    >
      (
      bg-dark-0
      ) 
      I'm Text component
    </p>
    <p
      class="c-cyFBRX c-cyFBRX-qrXLX-as-p c-cyFBRX-dYJjti-weight-regular c-cyFBRX-ikAmkAa-css"
    >
      (
      bg-dark-1
      ) 
      I'm Text component
    </p>
    <p
      class="c-cyFBRX c-cyFBRX-qrXLX-as-p c-cyFBRX-dYJjti-weight-regular c-cyFBRX-icVAndF-css"
    >
      (
      bg-dark-2
      ) 
      I'm Text component
    </p>
    <p
      class="c-cyFBRX c-cyFBRX-qrXLX-as-p c-cyFBRX-dYJjti-weight-regular c-cyFBRX-ifewRwc-css"
    >
      (
      bg-dark-3
      ) 
      I'm Text component
    </p>
    <p
      class="c-cyFBRX c-cyFBRX-qrXLX-as-p c-cyFBRX-dYJjti-weight-regular c-cyFBRX-ibpQmlV-css"
    >
      (
      bg-light-0
      ) 
      I'm Text component
    </p>
    <p
      class="c-cyFBRX c-cyFBRX-qrXLX-as-p c-cyFBRX-dYJjti-weight-regular c-cyFBRX-ijkkpNo-css"
    >
      (
      bg-light-1
      ) 
      I'm Text component
    </p>
    <p
      class="c-cyFBRX c-cyFBRX-qrXLX-as-p c-cyFBRX-dYJjti-weight-regular c-cyFBRX-iqZQWj-css"
    >
      (
      bg-light-2
      ) 
      I'm Text component
    </p>
    <p
      class="c-cyFBRX c-cyFBRX-qrXLX-as-p c-cyFBRX-dYJjti-weight-regular c-cyFBRX-iiltUxC-css"
    >
      (
      bg-light-3
      ) 
      I'm Text component
    </p>
    <p
      class="c-cyFBRX c-cyFBRX-qrXLX-as-p c-cyFBRX-dYJjti-weight-regular c-cyFBRX-ihrTeNT-css"
    >
      (
      bg-saturate
      ) 
      I'm Text component
    </p>
    <p
      class="c-cyFBRX c-cyFBRX-qrXLX-as-p c-cyFBRX-dYJjti-weight-regular c-cyFBRX-ioJrsa-css"
    >
      (
      bg-desaturate
      ) 
      I'm Text component
    </p>
    <p
      class="c-cyFBRX c-cyFBRX-qrXLX-as-p c-cyFBRX-dYJjti-weight-regular c-cyFBRX-icyFBRX-css"
    >
      (
      text
      ) 
      I'm Text component
    </p>
    <p
      class="c-cyFBRX c-cyFBRX-qrXLX-as-p c-cyFBRX-dYJjti-weight-regular c-cyFBRX-iAVjHn-css"
    >
      (
      text-dark-0
      ) 
      I'm Text component
    </p>
    <p
      class="c-cyFBRX c-cyFBRX-qrXLX-as-p c-cyFBRX-dYJjti-weight-regular c-cyFBRX-idPSQQi-css"
    >
      (
      text-dark-1
      ) 
      I'm Text component
    </p>
    <p
      class="c-cyFBRX c-cyFBRX-qrXLX-as-p c-cyFBRX-dYJjti-weight-regular c-cyFBRX-ibtQhRN-css"
    >
      (
      text-dark-2
      ) 
      I'm Text component
    </p>
    <p
      class="c-cyFBRX c-cyFBRX-qrXLX-as-p c-cyFBRX-dYJjti-weight-regular c-cyFBRX-ieINPaI-css"
    >
      (
      text-dark-3
      ) 
      I'm Text component
    </p>
    <p
      class="c-cyFBRX c-cyFBRX-qrXLX-as-p c-cyFBRX-dYJjti-weight-regular c-cyFBRX-ijYsKdx-css"
    >
      (
      text-light-0
      ) 
      I'm Text component
    </p>
    <p
      class="c-cyFBRX c-cyFBRX-qrXLX-as-p c-cyFBRX-dYJjti-weight-regular c-cyFBRX-ihYvGvU-css"
    >
      (
      text-light-1
      ) 
      I'm Text component
    </p>
    <p
      class="c-cyFBRX c-cyFBRX-qrXLX-as-p c-cyFBRX-dYJjti-weight-regular c-cyFBRX-ibZFWsj-css"
    >
      (
      text-light-2
      ) 
      I'm Text component
    </p>
    <p
      class="c-cyFBRX c-cyFBRX-qrXLX-as-p c-cyFBRX-dYJjti-weight-regular c-cyFBRX-ilpeCjC-css"
    >
      (
      text-light-3
      ) 
      I'm Text component
    </p>
    <p
      class="c-cyFBRX c-cyFBRX-qrXLX-as-p c-cyFBRX-dYJjti-weight-regular c-cyFBRX-ikaIEUj-css"
    >
      (
      text-saturate
      ) 
      I'm Text component
    </p>
    <p
      class="c-cyFBRX c-cyFBRX-qrXLX-as-p c-cyFBRX-dYJjti-weight-regular c-cyFBRX-ikZckXm-css"
    >
      (
      text-desaturate
      ) 
      I'm Text component
    </p>
    <p
      class="c-cyFBRX c-cyFBRX-qrXLX-as-p c-cyFBRX-dYJjti-weight-regular c-cyFBRX-ihLMfHx-css"
    >
      (
      foreground
      ) 
      I'm Text component
    </p>
    <p
      class="c-cyFBRX c-cyFBRX-qrXLX-as-p c-cyFBRX-dYJjti-weight-regular c-cyFBRX-icKkddl-css"
    >
      (
      foreground-dark-0
      ) 
      I'm Text component
    </p>
    <p
      class="c-cyFBRX c-cyFBRX-qrXLX-as-p c-cyFBRX-dYJjti-weight-regular c-cyFBRX-iVXBSw-css"
    >
      (
      foreground-dark-1
      ) 
      I'm Text component
    </p>
    <p
      class="c-cyFBRX c-cyFBRX-qrXLX-as-p c-cyFBRX-dYJjti-weight-regular c-cyFBRX-ihSObmv-css"
    >
      (
      foreground-dark-2
      ) 
      I'm Text component
    </p>
    <p
      class="c-cyFBRX c-cyFBRX-qrXLX-as-p c-cyFBRX-dYJjti-weight-regular c-cyFBRX-igeBAbG-css"
    >
      (
      foreground-dark-3
      ) 
      I'm Text component
    </p>
    <p
      class="c-cyFBRX c-cyFBRX-qrXLX-as-p c-cyFBRX-dYJjti-weight-regular c-cyFBRX-ihvCXLH-css"
    >
      (
      foreground-light-0
      ) 
      I'm Text component
    </p>
    <p
      class="c-cyFBRX c-cyFBRX-qrXLX-as-p c-cyFBRX-dYJjti-weight-regular c-cyFBRX-ihbESJy-css"
    >
      (
      foreground-light-1
      ) 
      I'm Text component
    </p>
    <p
      class="c-cyFBRX c-cyFBRX-qrXLX-as-p c-cyFBRX-dYJjti-weight-regular c-cyFBRX-icXTnaN-css"
    >
      (
      foreground-light-2
      ) 
      I'm Text component
    </p>
    <p
      class="c-cyFBRX c-cyFBRX-qrXLX-as-p c-cyFBRX-dYJjti-weight-regular c-cyFBRX-icDVhYE-css"
    >
      (
      foreground-light-3
      ) 
      I'm Text component
    </p>
    <p
      class="c-cyFBRX c-cyFBRX-qrXLX-as-p c-cyFBRX-dYJjti-weight-regular c-cyFBRX-ikCnHpR-css"
    >
      (
      foreground-saturate
      ) 
      I'm Text component
    </p>
    <p
      class="c-cyFBRX c-cyFBRX-qrXLX-as-p c-cyFBRX-dYJjti-weight-regular c-cyFBRX-ieZkOgU-css"
    >
      (
      foreground-desaturate
      ) 
      I'm Text component
    </p>
    <p
      class="c-cyFBRX c-cyFBRX-qrXLX-as-p c-cyFBRX-dYJjti-weight-regular c-cyFBRX-ieQVRIy-css"
    >
      (
      orange
      ) 
      I'm Text component
    </p>
    <p
      class="c-cyFBRX c-cyFBRX-qrXLX-as-p c-cyFBRX-dYJjti-weight-regular c-cyFBRX-ijXdIWC-css"
    >
      (
      orange-dark-0
      ) 
      I'm Text component
    </p>
    <p
      class="c-cyFBRX c-cyFBRX-qrXLX-as-p c-cyFBRX-dYJjti-weight-regular c-cyFBRX-ieXOuof-css"
    >
      (
      orange-dark-1
      ) 
      I'm Text component
    </p>
    <p
      class="c-cyFBRX c-cyFBRX-qrXLX-as-p c-cyFBRX-dYJjti-weight-regular c-cyFBRX-ibwLCPQ-css"
    >
      (
      orange-dark-2
      ) 
      I'm Text component
    </p>
    <p
      class="c-cyFBRX c-cyFBRX-qrXLX-as-p c-cyFBRX-dYJjti-weight-regular c-cyFBRX-ihMRXGp-css"
    >
      (
      orange-dark-3
      ) 
      I'm Text component
    </p>
    <p
      class="c-cyFBRX c-cyFBRX-qrXLX-as-p c-cyFBRX-dYJjti-weight-regular c-cyFBRX-ieoAtAM-css"
    >
      (
      orange-light-0
      ) 
      I'm Text component
    </p>
    <p
      class="c-cyFBRX c-cyFBRX-qrXLX-as-p c-cyFBRX-dYJjti-weight-regular c-cyFBRX-ifOcHhJ-css"
    >
      (
      orange-light-1
      ) 
      I'm Text component
    </p>
    <p
      class="c-cyFBRX c-cyFBRX-qrXLX-as-p c-cyFBRX-dYJjti-weight-regular c-cyFBRX-ijZaTby-css"
    >
      (
      orange-light-2
      ) 
      I'm Text component
    </p>
    <p
      class="c-cyFBRX c-cyFBRX-qrXLX-as-p c-cyFBRX-dYJjti-weight-regular c-cyFBRX-ijhxjz-css"
    >
      (
      orange-light-3
      ) 
      I'm Text component
    </p>
    <p
      class="c-cyFBRX c-cyFBRX-qrXLX-as-p c-cyFBRX-dYJjti-weight-regular c-cyFBRX-ikikieC-css"
    >
      (
      orange-saturate
      ) 
      I'm Text component
    </p>
    <p
      class="c-cyFBRX c-cyFBRX-qrXLX-as-p c-cyFBRX-dYJjti-weight-regular c-cyFBRX-ibvYyfj-css"
    >
      (
      orange-desaturate
      ) 
      I'm Text component
    </p>
    <p
      class="c-cyFBRX c-cyFBRX-qrXLX-as-p c-cyFBRX-dYJjti-weight-regular c-cyFBRX-idXSmcC-css"
    >
      (
      yellow
      ) 
      I'm Text component
    </p>
    <p
      class="c-cyFBRX c-cyFBRX-qrXLX-as-p c-cyFBRX-dYJjti-weight-regular c-cyFBRX-isLOlm-css"
    >
      (
      yellow-dark-0
      ) 
      I'm Text component
    </p>
    <p
      class="c-cyFBRX c-cyFBRX-qrXLX-as-p c-cyFBRX-dYJjti-weight-regular c-cyFBRX-iiJeUCz-css"
    >
      (
      yellow-dark-1
      ) 
      I'm Text component
    </p>
    <p
      class="c-cyFBRX c-cyFBRX-qrXLX-as-p c-cyFBRX-dYJjti-weight-regular c-cyFBRX-idQRKbw-css"
    >
      (
      yellow-dark-2
      ) 
      I'm Text component
    </p>
    <p
      class="c-cyFBRX c-cyFBRX-qrXLX-as-p c-cyFBRX-dYJjti-weight-regular c-cyFBRX-iRPgTN-css"
    >
      (
      yellow-dark-3
      ) 
      I'm Text component
    </p>
    <p
      class="c-cyFBRX c-cyFBRX-qrXLX-as-p c-cyFBRX-dYJjti-weight-regular c-cyFBRX-iiPzqBU-css"
    >
      (
      yellow-light-0
      ) 
      I'm Text component
    </p>
    <p
      class="c-cyFBRX c-cyFBRX-qrXLX-as-p c-cyFBRX-dYJjti-weight-regular c-cyFBRX-idPnVeR-css"
    >
      (
      yellow-light-1
      ) 
      I'm Text component
    </p>
    <p
      class="c-cyFBRX c-cyFBRX-qrXLX-as-p c-cyFBRX-dYJjti-weight-regular c-cyFBRX-iiUJsUW-css"
    >
      (
      yellow-light-2
      ) 
      I'm Text component
    </p>
    <p
      class="c-cyFBRX c-cyFBRX-qrXLX-as-p c-cyFBRX-dYJjti-weight-regular c-cyFBRX-idUxXxT-css"
    >
      (
      yellow-light-3
      ) 
      I'm Text component
    </p>
    <p
      class="c-cyFBRX c-cyFBRX-qrXLX-as-p c-cyFBRX-dYJjti-weight-regular c-cyFBRX-ibkYzRm-css"
    >
      (
      yellow-saturate
      ) 
      I'm Text component
    </p>
    <p
      class="c-cyFBRX c-cyFBRX-qrXLX-as-p c-cyFBRX-dYJjti-weight-regular c-cyFBRX-ihqRFLf-css"
    >
      (
      yellow-desaturate
      ) 
      I'm Text component
    </p>
    <p
      class="c-cyFBRX c-cyFBRX-qrXLX-as-p c-cyFBRX-dYJjti-weight-regular c-cyFBRX-ikYTZoZ-css"
    >
      (
      green
      ) 
      I'm Text component
    </p>
    <p
      class="c-cyFBRX c-cyFBRX-qrXLX-as-p c-cyFBRX-dYJjti-weight-regular c-cyFBRX-icEtYjd-css"
    >
      (
      green-dark-0
      ) 
      I'm Text component
    </p>
    <p
      class="c-cyFBRX c-cyFBRX-qrXLX-as-p c-cyFBRX-dYJjti-weight-regular c-cyFBRX-iftVcwE-css"
    >
      (
      green-dark-1
      ) 
      I'm Text component
    </p>
    <p
      class="c-cyFBRX c-cyFBRX-qrXLX-as-p c-cyFBRX-dYJjti-weight-regular c-cyFBRX-iiNWqQT-css"
    >
      (
      green-dark-2
      ) 
      I'm Text component
    </p>
    <p
      class="c-cyFBRX c-cyFBRX-qrXLX-as-p c-cyFBRX-dYJjti-weight-regular c-cyFBRX-iobLFy-css"
    >
      (
      green-dark-3
      ) 
      I'm Text component
    </p>
    <p
      class="c-cyFBRX c-cyFBRX-qrXLX-as-p c-cyFBRX-dYJjti-weight-regular c-cyFBRX-ifXeQNj-css"
    >
      (
      green-light-0
      ) 
      I'm Text component
    </p>
    <p
      class="c-cyFBRX c-cyFBRX-qrXLX-as-p c-cyFBRX-dYJjti-weight-regular c-cyFBRX-igfhmYm-css"
    >
      (
      green-light-1
      ) 
      I'm Text component
    </p>
    <p
      class="c-cyFBRX c-cyFBRX-qrXLX-as-p c-cyFBRX-dYJjti-weight-regular c-cyFBRX-idLgqYV-css"
    >
      (
      green-light-2
      ) 
      I'm Text component
    </p>
    <p
      class="c-cyFBRX c-cyFBRX-qrXLX-as-p c-cyFBRX-dYJjti-weight-regular c-cyFBRX-idTiNjY-css"
    >
      (
      green-light-3
      ) 
      I'm Text component
    </p>
    <p
      class="c-cyFBRX c-cyFBRX-qrXLX-as-p c-cyFBRX-dYJjti-weight-regular c-cyFBRX-iuFmDd-css"
    >
      (
      green-saturate
      ) 
      I'm Text component
    </p>
    <p
      class="c-cyFBRX c-cyFBRX-qrXLX-as-p c-cyFBRX-dYJjti-weight-regular c-cyFBRX-iedhVEE-css"
    >
      (
      green-desaturate
      ) 
      I'm Text component
    </p>
    <p
      class="c-cyFBRX c-cyFBRX-qrXLX-as-p c-cyFBRX-dYJjti-weight-regular c-cyFBRX-ibpRjqJ-css"
    >
      (
      red
      ) 
      I'm Text component
    </p>
    <p
      class="c-cyFBRX c-cyFBRX-qrXLX-as-p c-cyFBRX-dYJjti-weight-regular c-cyFBRX-ijRHnl-css"
    >
      (
      red-dark-0
      ) 
      I'm Text component
    </p>
    <p
      class="c-cyFBRX c-cyFBRX-qrXLX-as-p c-cyFBRX-dYJjti-weight-regular c-cyFBRX-icjgPEw-css"
    >
      (
      red-dark-1
      ) 
      I'm Text component
    </p>
    <p
      class="c-cyFBRX c-cyFBRX-qrXLX-as-p c-cyFBRX-dYJjti-weight-regular c-cyFBRX-ifoibeD-css"
    >
      (
      red-dark-2
      ) 
      I'm Text component
    </p>
    <p
      class="c-cyFBRX c-cyFBRX-qrXLX-as-p c-cyFBRX-dYJjti-weight-regular c-cyFBRX-ihnxjvO-css"
    >
      (
      red-dark-3
      ) 
      I'm Text component
    </p>
    <p
      class="c-cyFBRX c-cyFBRX-qrXLX-as-p c-cyFBRX-dYJjti-weight-regular c-cyFBRX-iopjBr-css"
    >
      (
      red-light-0
      ) 
      I'm Text component
    </p>
    <p
      class="c-cyFBRX c-cyFBRX-qrXLX-as-p c-cyFBRX-dYJjti-weight-regular c-cyFBRX-idyXLFG-css"
    >
      (
      red-light-1
      ) 
      I'm Text component
    </p>
    <p
      class="c-cyFBRX c-cyFBRX-qrXLX-as-p c-cyFBRX-dYJjti-weight-regular c-cyFBRX-icGnSpt-css"
    >
      (
      red-light-2
      ) 
      I'm Text component
    </p>
    <p
      class="c-cyFBRX c-cyFBRX-qrXLX-as-p c-cyFBRX-dYJjti-weight-regular c-cyFBRX-ifQWutI-css"
    >
      (
      red-light-3
      ) 
      I'm Text component
    </p>
    <p
      class="c-cyFBRX c-cyFBRX-qrXLX-as-p c-cyFBRX-dYJjti-weight-regular c-cyFBRX-ipzMap-css"
    >
      (
      red-saturate
      ) 
      I'm Text component
    </p>
    <p
      class="c-cyFBRX c-cyFBRX-qrXLX-as-p c-cyFBRX-dYJjti-weight-regular c-cyFBRX-igecSKE-css"
    >
      (
      red-desaturate
      ) 
      I'm Text component
    </p>
    <p
      class="c-cyFBRX c-cyFBRX-qrXLX-as-p c-cyFBRX-dYJjti-weight-regular c-cyFBRX-iXlZOi-css"
    >
      (
      error
      ) 
      I'm Text component
    </p>
    <p
      class="c-cyFBRX c-cyFBRX-qrXLX-as-p c-cyFBRX-dYJjti-weight-regular c-cyFBRX-ikeWtQC-css"
    >
      (
      error-dark-0
      ) 
      I'm Text component
    </p>
    <p
      class="c-cyFBRX c-cyFBRX-qrXLX-as-p c-cyFBRX-dYJjti-weight-regular c-cyFBRX-igvUaAn-css"
    >
      (
      error-dark-1
      ) 
      I'm Text component
    </p>
    <p
      class="c-cyFBRX c-cyFBRX-qrXLX-as-p c-cyFBRX-dYJjti-weight-regular c-cyFBRX-ibyQUqd-css"
    >
      (
      success
      ) 
      I'm Text component
    </p>
    <p
      class="c-cyFBRX c-cyFBRX-qrXLX-as-p c-cyFBRX-dYJjti-weight-regular c-cyFBRX-ierbNbl-css"
    >
      (
      success-dark-0
      ) 
      I'm Text component
    </p>
    <p
      class="c-cyFBRX c-cyFBRX-qrXLX-as-p c-cyFBRX-dYJjti-weight-regular c-cyFBRX-igZEUWQ-css"
    >
      (
      warning
      ) 
      I'm Text component
    </p>
    <p
      class="c-cyFBRX c-cyFBRX-qrXLX-as-p c-cyFBRX-dYJjti-weight-regular c-cyFBRX-idtZXdA-css"
    >
      (
      warning-dark-0
      ) 
      I'm Text component
    </p>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`Storyshots Components/Text Main 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body
    class="sb-show-nopreview"
  >
    <div>
      <p
        class="c-cyFBRX c-cyFBRX-qrXLX-as-p c-cyFBRX-juWgct-size-0 c-cyFBRX-cmVlgk-textAlign-left c-cyFBRX-dYJjti-weight-regular c-cyFBRX-icyFBRX-css"
      >
        I'm Text component
      </p>
    </div>
  </body>,
  "container": <div>
    <p
      class="c-cyFBRX c-cyFBRX-qrXLX-as-p c-cyFBRX-juWgct-size-0 c-cyFBRX-cmVlgk-textAlign-left c-cyFBRX-dYJjti-weight-regular c-cyFBRX-icyFBRX-css"
    >
      I'm Text component
    </p>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`Storyshots Components/Text Sizes 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body
    class="sb-show-nopreview"
  >
    <div>
      <p
        class="c-cyFBRX c-cyFBRX-qrXLX-as-p c-cyFBRX-juWgct-size-0 c-cyFBRX-dYJjti-weight-regular c-cyFBRX-icyFBRX-css"
      >
        (
        0
        ) 
        I'm Text component
      </p>
      <p
        class="c-cyFBRX c-cyFBRX-qrXLX-as-p c-cyFBRX-EDrvg-size-1 c-cyFBRX-dYJjti-weight-regular c-cyFBRX-icyFBRX-css"
      >
        (
        1
        ) 
        I'm Text component
      </p>
      <p
        class="c-cyFBRX c-cyFBRX-qrXLX-as-p c-cyFBRX-cBLpOj-size-2 c-cyFBRX-dYJjti-weight-regular c-cyFBRX-icyFBRX-css"
      >
        (
        2
        ) 
        I'm Text component
      </p>
      <p
        class="c-cyFBRX c-cyFBRX-qrXLX-as-p c-cyFBRX-iMVRpC-size-3 c-cyFBRX-dYJjti-weight-regular c-cyFBRX-icyFBRX-css"
      >
        (
        3
        ) 
        I'm Text component
      </p>
      <p
        class="c-cyFBRX c-cyFBRX-qrXLX-as-p c-cyFBRX-gHgbiV-size-4 c-cyFBRX-dYJjti-weight-regular c-cyFBRX-icyFBRX-css"
      >
        (
        4
        ) 
        I'm Text component
      </p>
      <p
        class="c-cyFBRX c-cyFBRX-qrXLX-as-p c-cyFBRX-kaynmv-size--3 c-cyFBRX-dYJjti-weight-regular c-cyFBRX-icyFBRX-css"
      >
        (
        -3
        ) 
        I'm Text component
      </p>
      <p
        class="c-cyFBRX c-cyFBRX-qrXLX-as-p c-cyFBRX-fmzLye-size--2 c-cyFBRX-dYJjti-weight-regular c-cyFBRX-icyFBRX-css"
      >
        (
        -2
        ) 
        I'm Text component
      </p>
      <p
        class="c-cyFBRX c-cyFBRX-qrXLX-as-p c-cyFBRX-iEkYDt-size--1 c-cyFBRX-dYJjti-weight-regular c-cyFBRX-icyFBRX-css"
      >
        (
        -1
        ) 
        I'm Text component
      </p>
    </div>
  </body>,
  "container": <div>
    <p
      class="c-cyFBRX c-cyFBRX-qrXLX-as-p c-cyFBRX-juWgct-size-0 c-cyFBRX-dYJjti-weight-regular c-cyFBRX-icyFBRX-css"
    >
      (
      0
      ) 
      I'm Text component
    </p>
    <p
      class="c-cyFBRX c-cyFBRX-qrXLX-as-p c-cyFBRX-EDrvg-size-1 c-cyFBRX-dYJjti-weight-regular c-cyFBRX-icyFBRX-css"
    >
      (
      1
      ) 
      I'm Text component
    </p>
    <p
      class="c-cyFBRX c-cyFBRX-qrXLX-as-p c-cyFBRX-cBLpOj-size-2 c-cyFBRX-dYJjti-weight-regular c-cyFBRX-icyFBRX-css"
    >
      (
      2
      ) 
      I'm Text component
    </p>
    <p
      class="c-cyFBRX c-cyFBRX-qrXLX-as-p c-cyFBRX-iMVRpC-size-3 c-cyFBRX-dYJjti-weight-regular c-cyFBRX-icyFBRX-css"
    >
      (
      3
      ) 
      I'm Text component
    </p>
    <p
      class="c-cyFBRX c-cyFBRX-qrXLX-as-p c-cyFBRX-gHgbiV-size-4 c-cyFBRX-dYJjti-weight-regular c-cyFBRX-icyFBRX-css"
    >
      (
      4
      ) 
      I'm Text component
    </p>
    <p
      class="c-cyFBRX c-cyFBRX-qrXLX-as-p c-cyFBRX-kaynmv-size--3 c-cyFBRX-dYJjti-weight-regular c-cyFBRX-icyFBRX-css"
    >
      (
      -3
      ) 
      I'm Text component
    </p>
    <p
      class="c-cyFBRX c-cyFBRX-qrXLX-as-p c-cyFBRX-fmzLye-size--2 c-cyFBRX-dYJjti-weight-regular c-cyFBRX-icyFBRX-css"
    >
      (
      -2
      ) 
      I'm Text component
    </p>
    <p
      class="c-cyFBRX c-cyFBRX-qrXLX-as-p c-cyFBRX-iEkYDt-size--1 c-cyFBRX-dYJjti-weight-regular c-cyFBRX-icyFBRX-css"
    >
      (
      -1
      ) 
      I'm Text component
    </p>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`Storyshots Components/Text Variants 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body
    class="sb-show-nopreview"
  >
    <div>
      <p
        class="c-cyFBRX c-cyFBRX-qrXLX-as-p c-cyFBRX-dYJjti-weight-regular c-cyFBRX-icyFBRX-css"
      >
        (
        p
        ) 
        I'm Text component
      </p>
      <h1
        class="c-cyFBRX c-cyFBRX-cOvGpz-as-h1 c-cyFBRX-dYJjti-weight-regular c-cyFBRX-icyFBRX-css"
      >
        (
        h1
        ) 
        I'm Text component
      </h1>
      <h2
        class="c-cyFBRX c-cyFBRX-dgIeKX-as-h2 c-cyFBRX-dYJjti-weight-regular c-cyFBRX-icyFBRX-css"
      >
        (
        h2
        ) 
        I'm Text component
      </h2>
      <h3
        class="c-cyFBRX c-cyFBRX-gTWrwz-as-h3 c-cyFBRX-dYJjti-weight-regular c-cyFBRX-icyFBRX-css"
      >
        (
        h3
        ) 
        I'm Text component
      </h3>
      <h4
        class="c-cyFBRX c-cyFBRX-laQIbX-as-h4 c-cyFBRX-dYJjti-weight-regular c-cyFBRX-icyFBRX-css"
      >
        (
        h4
        ) 
        I'm Text component
      </h4>
      <h5
        class="c-cyFBRX c-cyFBRX-fCxbcT-as-h5 c-cyFBRX-dYJjti-weight-regular c-cyFBRX-icyFBRX-css"
      >
        (
        h5
        ) 
        I'm Text component
      </h5>
      <h6
        class="c-cyFBRX c-cyFBRX-dxyPIY-as-h6 c-cyFBRX-dYJjti-weight-regular c-cyFBRX-icyFBRX-css"
      >
        (
        h6
        ) 
        I'm Text component
      </h6>
      <label
        class="c-cyFBRX c-cyFBRX-qrXLX-as-label c-cyFBRX-dYJjti-weight-regular c-cyFBRX-icyFBRX-css"
      >
        (
        label
        ) 
        I'm Text component
      </label>
      <span
        class="c-cyFBRX c-cyFBRX-qrXLX-as-span c-cyFBRX-dYJjti-weight-regular c-cyFBRX-icyFBRX-css"
      >
        (
        span
        ) 
        I'm Text component
      </span>
    </div>
  </body>,
  "container": <div>
    <p
      class="c-cyFBRX c-cyFBRX-qrXLX-as-p c-cyFBRX-dYJjti-weight-regular c-cyFBRX-icyFBRX-css"
    >
      (
      p
      ) 
      I'm Text component
    </p>
    <h1
      class="c-cyFBRX c-cyFBRX-cOvGpz-as-h1 c-cyFBRX-dYJjti-weight-regular c-cyFBRX-icyFBRX-css"
    >
      (
      h1
      ) 
      I'm Text component
    </h1>
    <h2
      class="c-cyFBRX c-cyFBRX-dgIeKX-as-h2 c-cyFBRX-dYJjti-weight-regular c-cyFBRX-icyFBRX-css"
    >
      (
      h2
      ) 
      I'm Text component
    </h2>
    <h3
      class="c-cyFBRX c-cyFBRX-gTWrwz-as-h3 c-cyFBRX-dYJjti-weight-regular c-cyFBRX-icyFBRX-css"
    >
      (
      h3
      ) 
      I'm Text component
    </h3>
    <h4
      class="c-cyFBRX c-cyFBRX-laQIbX-as-h4 c-cyFBRX-dYJjti-weight-regular c-cyFBRX-icyFBRX-css"
    >
      (
      h4
      ) 
      I'm Text component
    </h4>
    <h5
      class="c-cyFBRX c-cyFBRX-fCxbcT-as-h5 c-cyFBRX-dYJjti-weight-regular c-cyFBRX-icyFBRX-css"
    >
      (
      h5
      ) 
      I'm Text component
    </h5>
    <h6
      class="c-cyFBRX c-cyFBRX-dxyPIY-as-h6 c-cyFBRX-dYJjti-weight-regular c-cyFBRX-icyFBRX-css"
    >
      (
      h6
      ) 
      I'm Text component
    </h6>
    <label
      class="c-cyFBRX c-cyFBRX-qrXLX-as-label c-cyFBRX-dYJjti-weight-regular c-cyFBRX-icyFBRX-css"
    >
      (
      label
      ) 
      I'm Text component
    </label>
    <span
      class="c-cyFBRX c-cyFBRX-qrXLX-as-span c-cyFBRX-dYJjti-weight-regular c-cyFBRX-icyFBRX-css"
    >
      (
      span
      ) 
      I'm Text component
    </span>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`Storyshots Components/Text Weight 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body
    class="sb-show-nopreview"
  >
    <div>
      <p
        class="c-cyFBRX c-cyFBRX-qrXLX-as-p c-cyFBRX-hqvHjm-weight-light c-cyFBRX-icyFBRX-css"
      >
        (
        light
        ) 
        I'm Text component
      </p>
      <p
        class="c-cyFBRX c-cyFBRX-qrXLX-as-p c-cyFBRX-dYJjti-weight-regular c-cyFBRX-icyFBRX-css"
      >
        (
        regular
        ) 
        I'm Text component
      </p>
      <p
        class="c-cyFBRX c-cyFBRX-qrXLX-as-p c-cyFBRX-iqKmYR-weight-medium c-cyFBRX-icyFBRX-css"
      >
        (
        medium
        ) 
        I'm Text component
      </p>
      <p
        class="c-cyFBRX c-cyFBRX-qrXLX-as-p c-cyFBRX-hyvuql-weight-bold c-cyFBRX-icyFBRX-css"
      >
        (
        bold
        ) 
        I'm Text component
      </p>
    </div>
  </body>,
  "container": <div>
    <p
      class="c-cyFBRX c-cyFBRX-qrXLX-as-p c-cyFBRX-hqvHjm-weight-light c-cyFBRX-icyFBRX-css"
    >
      (
      light
      ) 
      I'm Text component
    </p>
    <p
      class="c-cyFBRX c-cyFBRX-qrXLX-as-p c-cyFBRX-dYJjti-weight-regular c-cyFBRX-icyFBRX-css"
    >
      (
      regular
      ) 
      I'm Text component
    </p>
    <p
      class="c-cyFBRX c-cyFBRX-qrXLX-as-p c-cyFBRX-iqKmYR-weight-medium c-cyFBRX-icyFBRX-css"
    >
      (
      medium
      ) 
      I'm Text component
    </p>
    <p
      class="c-cyFBRX c-cyFBRX-qrXLX-as-p c-cyFBRX-hyvuql-weight-bold c-cyFBRX-icyFBRX-css"
    >
      (
      bold
      ) 
      I'm Text component
    </p>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;
